<sect1 id="WhatIsChapter">
<title>What is a <productname>JavaStation</productname>?</title>

<para>
This chapter explains to the reader what the <productname>JavaStation
</productname> line is, its components, <acronym>NC</acronym> concepts, 
how to get one, and why one would choose the <application>Linux 
<acronym>OS</acronym></application> for it.
</para>

<sect2 id="WhatIsJavaStationSection">
<title>What is a <productname>JavaStation</productname> <acronym>NC</acronym>?
</title>

<para>
The <productname>JavaStation</productname> <acronym>NC</acronym> is a 
model line of network computers built and sold by 
<ulink url="http://www.sun.com">Sun Microsystems</ulink> between 
November 1996 and March 2000.  The <productname>JavaStation</productname> 
line was Sun's low-cost terminal option during that timeframe.   It
was the marketed successor to the Xterminal 1 and is succeeeded by the
SunRay, although all three machines are fundamentally different.
</para>
 
<para>
The <productname>JavaStation</productname> hardware ran Sun's 
own <application>JavaOS</application> and either Sun's <application>
Hotjava</application> web browser, Sun's <application>HotJava Views
</application> task-manager software, or custom <application>Java
</application> applications of the customer's choice. 
</para>
 
<para>
The <productname>JavaStation</productname> was originally billed in 
November 1996 sneak previews as a low-cost desktop terminal, 
providing customers access to hot new <application>Java</application> 
applications, <quote>legacy</quote> <application>X</application> applications, 
and <quote>legacy</quote> <application>MS Windows</application> apps.  
During its lifetime, The <productname>JavaStation</productname>'s marketed 
functionality was changed twice from <quote>desktop terminal</quote> to 
<quote>single-app desktop device</quote> to finally a <quote>browser-based 
kiosk device</quote>.
</para>
 
<para>
At no time did Sun market the <productname>JavaStation</productname> as 
capable of running its flagship 
<ulink url="http://www.sun.com/solaris">Solaris</ulink> operating system 
the <ulink url="http://www.linux.com">Linux OS</ulink>, or any other
OS than Sun's JavaOS.
</para>

</sect2>

<sect2 id="WhatIsNCSection">
<title>Definition of an <acronym>NC</acronym> including the Differentiation 
from <acronym>PC</acronym>'s</title>

<para>
A network computer, or <acronym>NC</acronym>, was hailed as 
"the next big thing" in computing from late 1995 to early 1998.  
Conventional <acronym>PC</acronym>'s, called "fat clients", were 
expected to be minimized in businesses by thin-client 
<acronym>NC</acronym>'s. 
</para>
 
<para>
Thin-clients get their <acronym>OS</acronym>, applications, and data 
files entirely through the network.  They are different from 
dumb-terminals;  they run full-scale graphical applications.  
Thin-clients are also different than graphical X-terminals.  
X-terminals typically run an X server and display the client programs of 
a remote server.  Thin clients generally run full-scale graphical 
programs locally, such as a web browser, a <application>Java</application> 
application, or a <quote>legacy-connectivity program</quote>, which enables 
the thin-client to display <application>X</application> apps or 
<application>MS Windows</application> apps which run on more
powerful servers. 
</para>
 
<para>
Advantages of <acronym>NC</acronym>'s include: 
</para>

<itemizedlist>
<listitem>
<para>
<quote>Zero-Administration</quote>.  (Add a new <acronym>NC</acronym> and 
it will get <emphasis>everything</emphasis> it needs off the network, 
without an admin ever needing to visit it.)
</para>
</listitem>
<listitem>
<para>
Lower Total-Cost-of-Ownership (<acronym>TCO</acronym>) (No internal 
hard drives, floppy drives or <acronym>CD</acronym> players reduces 
form-factor, repair expenses, selling price and thus total-cost-of-ownership.)
</para>
</listitem>
<listitem>
<para>
Access to all web-based apps as well as <quote>legacy</quote> <application>X
</application> and <application>MS Windows</application> apps.
</para>
</listitem>
<listitem>
<para>
Quick upgrades (just upgrade your server and the changes propogate throughout)
</para>
</listitem>
<listitem>
<para>
Longer lifespan (just upgrade the software, growing hard disk and memory 
requirements is not an issue)
</para>
</listitem>
<listitem>
<para>
Smaller <acronym>OS</acronym> footprint (when running brower-based apps)
</para>
</listitem>
</itemizedlist>
 
<para>
Disadvantages of <acronym>NC</acronym>'s: 
</para>

<itemizedlist>
<listitem>
<para>
No local access to data files (all your files stored on a remote server)
</para>
</listitem>
<listitem>
<para>
Requires fast, stable networks
</para>
</listitem>
<listitem>
<para>
NC's generally have a low maximum amount of memory.  Though not as bad
as with fat-clients, this does eventually become a liability for the 
thin-client.
</para>
</listitem>
</itemizedlist>

</sect2>

<sect2 id="JavaStationModelsSection">
<title>Description of the <productname>JavaStation</productname> Model 
Line including Hardware Specs</title>

<para>
Depending on who you talk to, the number of <productname>JavaStation
</productname> models that were created is anywhere from one to six.  
The descriptions below will explain why. 
</para>
 

<sect3 id="MrCoffeeDescSection">

<title>
<productname>JavaStation-1</productname> [ <quote>Mr. Coffee</quote>] 
[<quote>the brick</quote>] [Sun Option No. JJ-xx]
</title>
 
<para>
This model is the most prevalent <productname>JavaStation</productname> model 
you are likely to find, although it wasn't the one and only 
<emphasis><productname>JavaStation</productname></emphasis> model Sun wished 
to sell to the public.  The <productname>JavaStation-1</productname> was the 
first generation <productname>JavaStation</productname>, released in 
November 1996 to pilot deployments as Sun's <quote>proof of concept</quote> 
of the Java <acronym>NC</acronym> design.  
</para>
 
<para>
Hardware-wise, the <productname>JavaStation-1</productname> is a 
Sun4M architecture machine.  It is based on the <productname>SPARCStation-4
</productname> design, with some deletions and <acronym>PC</acronym>-like 
modifications.  It is powered by a <hardware>110 Mhz MicroSPARC IIe 
CPU</hardware> and has no <hardware>SCSI</hardware>, <hardware>internal disks
</hardware>, <hardware>floppy</hardware>, <hardware>CD</hardware> or 
<hardware>expansion slots</hardware>.  The <productname>Mr. Coffee
</productname> <hardware>motherboard</hardware> is Sun Part 
No. <productnumber>501-3141</productnumber>. 
</para>
 
<para>
Instead of using the Sun-type <hardware>keyboard</hardware> and 
<hardware>mice</hardware>, <productname>JavaStation-1</productname> 
uses <acronym>PC</acronym>-like <hardware>PS2</hardware> parts instead.  
One of the original marketing highlights of the <productname>JavaStation
</productname> was that it would use standard <acronym>PC</acronym> parts 
wherever possible to keep overall price down. 
</para>
 
<para>
The <quote>brick</quote> has four <hardware>PC-like SIMM</hardware> 
slots.  The <hardware>SIMMs</hardware> taken are industry-standard 
60ns, 32-bit, 72-pin, 5V fast page <hardware>SIMMs</hardware>, 
installed in pairs.  Each slot is capable of holding up to a 
<hardware>16MB SIMM</hardware>, bringing the maximum total capacity 
of the unit to 64MB.  The <quote>xx</quote> in the Sun Option# of the 
unit indicated how much memory the unit shipped with.
</para>
 
<para>
For video display, the <productname>JavaStation-1</productname> utilizes 
the <hardware>Sun TCX framebuffer</hardware>, capable of 1024x768@70Hz in 
8-bit color.  The port connector however, is a <hardware>standard VGA jack
</hardware>, enabling the user to use standard <acronym>PC</acronym> 
<hardware>monitors</hardware> if desired (again, low cost in mind).  
The <hardware>on-board audio</hardware> is a <hardware>Crystal CS4231 chip
</hardware>, and the network interface is the <hardware>Sun Lance</hardware> 
10Mbps interface.  In addition, the <quote>brick</quote> also came with 
a <hardware>9-pin serial port</hardware> and <hardware>1/8" audio out jack
</hardware> on its back.  
</para>
 
<para>
The <productname>JavaStation-1</productname> was fitted into the Sun 
<quote>unidisk</quote> form factor case, and has been seen in a number 
of color schemes.  <productname>JavaStations</productname> have been 
fitted with casings in the white with light blue trim scheme used in 
<hardware>Sun workstations</hardware>, as well as the dark blue-grey 
<quote>new desktop</quote> scheme.  Some say <quote>JavaStation</quote>
and have the Java coffee cup logo written on it, others do not.  
Collectors may wish to collect all case variations.
</para>
 
<para>
The <productname>JavaStation-1</productname> was used in early 
Sun demos, and sold to pilot sites.  When first brought out, the 
cost to pilot sites was $699US.   This was at a time when <acronym>PC
</acronym>'s were still higher than $1000US.  By the end of the pilot
run, Sun was selling any remaining or used units for $299-$399US, in
anticipation for its <quote>real</quote> <productname>JavaStation
</productname> model. 
</para>
 
<para>
See the <productname>JavaStation-1</productname> at:
<ulink 
url="http://dubinski-family.org/~jshowto/Files/photos/mr_coffee_front_view.jpg">
     http://dubinski-family.org/~jshowto/Files/photos/mr_coffee_front_view.jpg
</ulink>
</para>

</sect3>


<sect3 id="KrupsDescSection">
<title>
<productname>JavaStation-<acronym>NC</acronym></productname> [<quote>
<productname>JavaStation-10</productname></quote>] [<quote>
<productname>Krups</productname></quote>] [<quote><productname>the tower</productname></quote>]
[<quote><productname>the percolator</productname></quote>] [
Sun Option No. JK-xx]
</title>
 
<para>
This model is the second most prevalent <productname>JavaStation</productname> 
model you are likely to find.  When you talk to industry people about the 
<quote>JavaStation</quote>, this is typically the model remembered first.  
Delayed numerous times, the <productname>Krups</productname> model 
officially went on sale to the general public Mar. 26, 1998 at the annual 
JavaOne conference. 
</para>
 
<para>
Though generation two of the <productname>JavaStation</productname> line, the 
<productname>Krups</productname> model was <emphasis>the JavaStation</emphasis>
.  Sporting a completely different board design than <productname>JavaStation-1
</productname>, <productname>Krups</productname> establishes what was to be 
the characteristic <productname>JavaStation</productname> architecture. 
</para>
 
<para>
<productname>Krups</productname> is powered by a 
<hardware>100Mhz MicroSPARC IIep</hardware> chip, (note the 'p'). 
Its mainboard had the internal addition of a <hardware>PCI bus</hardware>, 
about a year before this standard bus made its well-publicized 
appearance on the <productname>Sun Ultra</productname> workstation 
line. The <productname>Krups</productname> <hardware>motherboard</hardware> 
is Sun Part no. <productnumber>501-4267</productnumber>.
</para>
 
<para>
<productname>Krups</productname> keeps the <hardware>PS2 keyboard</hardware> 
and <hardware>PS2 mouse ports</hardware> from <productname>JavaStation-1
</productname>, keeping in mind the low-cost, interoperable goal of 
generation 1. 
</para>
 
<para>
With the new board design, came new memory chip sockets.  Instead of
<hardware>SIMMs</hardware>, the <quote>tower</quote> moved to <hardware>
168-pin DIMMs</hardware>.  <hardware>DIMMs</hardware> had begun to make 
their way from the workstation realm to <acronym>PC</acronym>'s in the 
time between generations one and two of the <productname>JavaStation
</productname> line, so it was fitting for Sun to switch to
it in anticipation of their status low-cost commodity memory chips. The
<hardware>DIMMs</hardware> accepted by the <quote>tower</quote> are 
<hardware>168pin, 3.3V unbuffered EDO DIMMs (not SDRAM)</hardware>.  With 
two sockets capable of holding a <hardware>32MB DIMM</hardware> each, the 
<productname>Krups</productname> has a maximum capacity of 64<acronym>MB
</acronym> <acronym>RAM</acronym>. As with the <productname>JavaStation-1
</productname>, the number <quote>xx</quote> in the Sun option number 
refers to the amount of memory shipped with the unit. 
</para>
 
<para>
For video display, the <productname>JavaStation-NC</productname> utilizes 
the <hardware>PCI-based IGS C1682 framebuffer</hardware>, 
capable of 1280x1024@80Hz in 24-bit <quote>true color</quote>.  This 
is a step up from the 8-bit display on <productname>JavaStation-1
</productname>.  The port connector remained a <hardware>standard VGA jack
</hardware> like <productname>JavaStation-1</productname>, enabling the 
user to use standard <acronym>PC</acronym> monitors if desired.
The on-board audio remains a <hardware>Crystal 
CS4231 chip</hardware> like <productname>JavaStation-1</productname>. 
The network interface on <productname>Krups</productname> is the 
<hardware>Sun HappyMeal</hardware> 10/100 Mbps interface, another step 
up from the original offering of <productname>JavaStation-1</productname>.
</para>
 
<para>
The <quote>tower</quote> came with the <hardware>9-pin serial port
</hardware> and <hardware>1/8" audio out jack</hardware> as 
<productname>JavaStation-1</productname>, but it also added a 
<hardware>1/8" audio-in jack</hardware>, to do sound recording with. 
</para>
 
<para>
Another addition in the <productname>JavaStation-NC</productname> is a 
<hardware>flash memory SIMM</hardware>.  This allows one to load the 
current revision of the <acronym>OS</acronym> onboard, increasing 
boot-speed tremendously. 
</para>
 
<para>
Perhaps the thing most memorable about the <productname>JavaStation-NC
</productname> is its case design.  The <productname>Krups</productname> 
comes in an aesthetically appealing casing.  The <hardware>mainboard</hardware> 
is mounted vertically, and the shell entraps it, giving it the <quote>tower
</quote> or <quote>percolator</quote> shape referred to.  With the 
streamlined case, the <hardware>power supply</hardware> is moved outside 
to small transformer.  The <productname>Krups</productname> unit gives 
off so little heat that there are no onboard cooling fans, making the 
<productname>Krups</productname> a <emphasis>dead-silent</emphasis> 
machine.  Imagine the difference in noise when replacing a lab of 
traditional desktops with the <productname>Krups</productname>!  
This case design earned <productname>Krups</productname> a<quote>
1998 Industrial Design Excellence Award</quote> from the Industrial 
Designers Society of America.  This award announcement is still available
for read at: 
<ulink url="http://www.idsa.org/whatis/seewhat/idea98/winners/javastation.htm">
            http://www.idsa.org/whatis/seewhat/idea98/winners/javastation.htm"
</ulink>.  
It is also archived locally via "fair use" for future readers at:
<ulink url="http://dubinski-family.org/~jshowto/Files/texts/krups_idsa_award.txt">
            http://dubinski-family.org/~jshowto/Files/texts/krups_idsa_award.txt"
</ulink>

</para>
 
<para>
The <productname>Krups</productname> had an initial base price of $599US, 
$100US cheaper than <productname>Mr. Coffee</productname>'s rollout price.  
Due to it being the only model formally sold by Sun to the general public, 
this is how <productname>Krups</productname> is sometimes referred to as 
the only <productname>JavaStation</productname>, and not one model of a 
product line.
</para>
 
<para>
See the <productname>JavaStation-NC</productname> at:
<ulink 
url="http://dubinski-family.org/~jshowto/Files/photos/krups_front_view.jpg">
     http://dubinski-family.org/~jshowto/Files/photos/krups_front_view.jpg
</ulink>
</para>

</sect3>

<sect3 id="EspressoDescSection">

<title>
<productname>JavaStation-E</productname> [<quote>Espresso</quote>] 
[Sun Option No. JE-xx]
</title>
 
<para>
This model is extremely rare to find.  It was never available for
sale in quantities to either the general public or the initial 
<productname>JavaStation</productname> deployments, limiting the
model's production quantity.  To call this <quote>Generation 
Three</quote> of the <productname>JavaStation</productname>
may be improper, as <productname>Espresso</productname> is nothing like 
the generation three <productname>JavaStation</productname> written about 
in early Sun marketing literature. 
</para>
 
<para>
The <productname>Espresso</productname> was designed as an extension of 
the <productname>Krups</productname>.   It was geared to sites that 
wanted a little bit more functionality and expansion capability from 
their <productname>JavaStations</productname>: a cross between an 
<acronym>NC</acronym> and a workstation.
</para>
 
<para>
<productname>Espresso</productname> is powered by the same 
<hardware>110Mhz MicroSPARC IIep chip</hardware> as <productname>Krups
</productname>.  It's mainboard is similar to <productname>Krups</productname>,
with the addition of <hardware>PCI slots</hardware> and an <hardware>IDE 
channel</hardware> for local hard disks.  The <hardware>IDE</hardware> on 
<productname>Espresso</productname> was not enabled in the demo units.
Those who have tried to make it work have concluded the wiring is incorrect,
and it requires a hardware rework to get going.
</para>
 
<para>
<productname>Espresso</productname> continues with the <hardware>PS2 keyboard
</hardware> and <hardware>PS2 mouse ports</hardware> from <productname>
Mr. Coffee</productname> and <productname>Krups</productname>. 
</para>
 
<para>
<productname>Espresso</productname> uses the same <hardware>168-pin, 
3.3V unbuffered EDO DIMMs</hardware> as <productname>Krups</productname>.  
The maximum amount of memory for Espresso is reported to be 96MB. 
As with the <productname>Mr. Coffee</productname> and <productname>Krups
</productname>, the number <quote>xx</quote> in the Sun option number 
refers to the amount of memory shipped with the unit. 
</para>
 
<para>
For video display, the <productname>Espresso</productname> uses the 
<hardware>PCI-based IGS C2000 framebuffer</hardware>, along with the same 
standard <hardware>VGA port connector</hardware> as <productname>Krups
</productname> and <productname>Mr. Coffee</productname>.  The 
on-board audio remains a <hardware>Crystal CS4231 chip</hardware> like 
<productname>Krups</productname>, and the network interface remains a 
<hardware>Sun HappyMeal</hardware> 10/100 Mbps interface like 
<productname>Krups</productname> as well.   
</para>
 
<para>
<productname>Espresso</productname> came with the <hardware>9-pin serial 
port</hardware> and <hardware>1/8" audio out</hardware> and 
<hardware>1/8" audio in</hardware> jacks of <productname>Krups</productname>, 
and a new addition of a  <hardware>parallel port</hardware>, and a second
9-pin serial port.  <productname> Espresso</productname> also comes 
with the <hardware>flash memory</hardware> to load your <acronym>OS</acronym> 
on and bypass the network boot cycle. 
</para>
 
<para>
One new addition to the <productname>Espresso</productname> is a 
<hardware>smart card slot</hardware>. 
</para>
 
<para>
The <productname>Espresso</productname> comes in a <quote>pizza box</quote> 
style case like the old <productname>Sun SparcStations</productname>, only 
a little taller, and not quite as wide. 
</para>
 
<para>
The <productname>Espresso</productname> was never sold to the public.  There 
was an internal testing period at Sun, but the units never went into 
mass-production.
</para>
 
<para>
One <productname>Espresso</productname> user mentioned he now uses 
his unit as both a server and router, with the addition of an 
<hardware>IDE disk</hardware> and <hardware>3C905 ethernet card</hardware>, 
demonstrating the expandability of this unit.
</para>
 
<para>
See the <productname>JavaStation-E</productname> at:
<ulink 
url="http://dubinski-family.org/~jshowto/Files/photos/espresso_front_view.jpg">
     http://dubinski-family.org/~jshowto/Files/photos/espresso_front_view.jpg
</ulink>
</para>

</sect3>

<sect3 id="JavaEngineDescSection">
<title>
<productname>JavaEngine-1</productname> [<quote>JE-1</quote>]
</title>
 
<para>
Like the <productname>Espresso</productname>, this unit is also an extremely 
rare find. 
</para>
 
<para>
This unit is supposed to be of similar board design to the Krups, but in 
an ATX form factor, with soldered onboard flash memory, and with a 
regular SVGA video chipset. 
</para>
 
<para>
Gleb Raiko  <email>raiko@niisi.msk.ru)</email> with the help of 
Vladimir Roganov <email>roganov@niisi.msk.ru</email> did initial 
the Linux kernel support on <quote>JE-1</quote>.  Pete Zaitcev 
<email>zaitcev@yahoo.com</email> later obtained a <quote>JE-1</quote> 
unit and restored full support in <application>Linux kernel 2.3.x+
</application>.
</para>
 
<para>
As the author of this document has never seen a <quote>JE-1</quote>, 
submissions from the public are welcome. 
</para>
 
<para>
See the <productname>JavaEngine-1</productname> at:
<ulink 
url="http://dubinski-family.org/~jshowto/Files/photos/je1_overhead_view.jpg">
     http://dubinski-family.org/~jshowto/Files/photos/je1_overhead_view.jpg
</ulink>
</para>

</sect3>

<sect3 id="DoverDescSection">
<title>
The <quote>Dover</quote> <productname>JavaStation</productname> model
</title>
 
<para>
This is another box which does not exist officially outside of Sun.  
Little was known of it at the first revision of this HOWTO.  Since then,
proud owners have stepped forward.  Basically, the Dover takes the Espresso 
theme and moves it to stock X86 parts.  
</para>

<para>
Dover comes in a case similar to the Espresso, but there's nothing where
the 'JavaStation-E' tag would be.  Dover can be situated in a vertical
position by removable feet.  All that is printed on the case is "Sun
MicroSystems 1998", and typically a serial number sticker of '12345678'
and 'Made in Taiwan'.
</para>

<para>
The motherboard is 'baby ATX' in configuration, but not
quite totally.  Near the the front of the case is a fan that points
at the CPU heat sink.  The CPU heat sink has another fan on top of it. 
The motherboard has a Socket 7 CPU socket that houses a Cyrix MediaGCm-266GP
CPU.  There are typical PC motherboard jumpers with silk-screened legends 
for setting both clock speed and multiplier.  The motherboard accepts
a PC100 DIMM (max. size unknown) and a powersupply with AT-type power
connectors.  Included among them are two floppy and regular hard
drive type plug.  There are two small jumpers going to the motherboard,
JPSB1 and JAUTO1, possibly for power management.
</para>

<para>
Expansion in Dover is via a two-card riser, with one PCI and one shared
PCI/ISA slot.  As mentioned earlier, the motherboard deviates slightly from
standard ATX. Along the back edge under the cards are
connectors for audio out, audio in, mic, HD15F video, two USB ports, 
D25F parallel printer, stacked PS/2 keyboard/mouse ports, and four
9-pin serial ports, marked A through D.  Unlike other JavaStation models,
there is no on-board ethernet.  Instead, it typically is provided by a 
supplied 3COM 3C905B-TX Fast Etherlink XL PCI card (with a wake-on-LAN 
cable going to the motherboard).  There is a standard Sun MAC address 
label on the back of the case.
</para>

<para>
Video is via a Cyrix CX5530 chip, but with the MediaGX chip, may be
just an auxilliary chip.  There exist both a FDD and HDD headers on the
motherboard, but nowhere to mount a FDD in the case and no provision
for an HDD bracket either.  There is a simple piezo buzzer mounted to 
the motherboard and additionally a speaker with a cable leading back 
near the audio out jacks.  Like the Espresso, there is a smart-card 
reader as well, and what looks like a compact-flash socket inside.
</para>

<para>
When booting it up, you get a blue JS screen.  Under the
exclamation point, are two memory card icons and a &lt;...&gt; 
icon.  It reads:
</para>

<screen>
Boot device: /ethernet   Arguments:
MAC Address: 08:00:20:95:5b:49
Open Boot 3.0, Built February 16, 1999 17:38:37
NIC: 10b7,9055 ethernet in PCI1                                           64MB SDRAM
Non-Volatile Device Memory Module Not Installed
SmartCard Reader Found
CPU Speed:  266 MHz


Can't open boot device

ok                         
</screen>

<para>  
The Dover model, since it is based on an x86 chip, is supported by Linux.
This HOWTO however focuses on the SPARC-based JavaStations, so the procedures
presented here <emphasis>will not work</emphasis> with it.  However, 
there's plenty of x86 documentation at large to work from.
</para>

<para>
See the <productname>Dover</productname> at:
<ulink 
url="http://dubinski-family.org/~jshowto/Files/photos/dover_inside.jpg">
     http://dubinski-family.org/~jshowto/Files/photos/dover_inside.jpg
</ulink>
</para>

</sect3>


<sect3 id="GenerationThreeDescSection">
<title>
The Generation 3 <quote>Super JavaStation</quote>
</title>
 
<para>
Sun originally envisioned three generation models of the <productname>
JavaStation</productname>: <productname>Mr. Coffee</productname>, the 
<productname>Krups</productname>, and the <quote>Super JavaStation</quote>.   
Generation Three was billed in early literature as going to be the fastest 
<productname>JavaStation</productname> offered, with a high-speed 
<hardware>CPU</hardware> and a <hardware>JavaChip co-processor</hardware> 
to translate <application>Java-bytecode</application> in hardware.
</para>

<para>
All indications are that it never got beyond the mental stage,
and was more of a marketing myth than anything else. 
</para>

<para>
First, consider that the cost of higher performance <acronym>CPU</acronym> 
as a factor.  If Sun packaged a high-performance <acronym>CPU</acronym> into 
a <productname>JavaStation</productname>, the low-cost advantage of an 
<acronym>NC</acronym> goes away.
</para>

<para>
Next, Sun did have their <hardware>PicoJava chip</hardware> available to 
decode <application>Java bytecode</application>, but rumor is the performance 
was not as good as expected, and the complete <hardware>JavaChip</hardware> 
project was shelved in the Summer of 1998, not long after <productname>Krups
</productname> was formally released. 
<!-- <Comment>ed note: verify date.</Comment> -->
</para>

<para>
The <quote>Dover</quote> project was being worked on, but the <quote>Corona
</quote> project, which would go on to become the <productname>Sun Ray
</productname>, was the final nail in the <productname>JavaStation</productname>
's coffin.
</para>
 
<para>
So all indications are that this model is a piece of <quote>vaporware</quote>.  
It is included here though, for the sake of completeness.
</para>

</sect3>

<sect3 id="JavaStationProtoDescSection">
<title>
The Pre-Mr. Coffee JavaStation Prototype
</title>
 
<para>
After the original publishing of this HOWTO, word of one more 
"JavaStation" model surfaced.  John Bodo, a reseller 
of JavaStation equipment, chimed in that he has a motherboard of a 
pre-JavaStation machine.  It was made by Diba Corporation, which was 
later bought out by Sun.  The unit was released as an early embededded 
Java platform that developers could use to build embedded Java machines. 
It has a Motorola 68030 CPU, 14.4k bps modem, ethernet interface, 
standard VGA interface and even a TV output.  The prototype's date is
circa 1996.
</para>

<para>
See the <productname>JavaStation Prototype</productname> at:
<ulink 
url="http://dubinski-family.org/~jshowto/Files/photos/pre_js_1.jpg">
     http://dubinski-family.org/~jshowto/Files/photos/pre_js_1.jpg
</ulink>
</para>

</sect3>

<sect3 id="JavaStationFoxDescSection">
<title>
The Pre-Mr. Coffee JavaStation/Fox
</title>
 
<para>
After receiving word of the JavaStation prototype from Diba, yet
more information has come regarding another pre-Mr. Coffee model.
This one though, has a greater known history we can share here.
</para>

<para>
This model was the JavaStation development box used by the developers
of early JavaStation software.  Basically it was a SS4/110 in a smaller,
custom case similar to the Mr. Coffee enclosure, with more squarish profile.  
</para>

<para>
The case has an off-white color with lateral stripe in Sun gray.  It
sits like a Mr. Coffee would on its side.  The front was a 1/2 cyclinder i
design in Sun  gray, has the Sun Logo, the word "Sun" under that, and the 
Java cup logo at the bottom.  
</para>

<para>
When booting up it claims to be a "JavaStation/Fox".  The motherboard 
does not have a normal Sun part number.  The CPU is a microSPARC-II running
at 110MHz.  The box has an onboard external SCSI connector,
dual A and B serial ports, audio in and out sound ports (Crystal 
Semiconductor 4231, 
lance ethernet network interface, onboard PCMCIA (stp4020), one SBUS expansion
slot, one AFXbus expansion slot, 2 72-pin SIMM slots (double-banked SIMMs
only), and no on-board video.  One would then add their own S-Bus frame 
buffer, or the 24-bit frame buffer from a ss5.  Also, an optional internal 
SCSI laptop hard drive could be put in.
</para>

<para>
The motherboard's part number is 501-2785.  The CPU is dated 1995 while the
NCR chips are dated 1994, establishing the time frame of the Fox.
</para>

<para>
The NetBSD/SPARC FAQ has a few more words on the Fox at:
<ulink 
url="http://www.netbsd.org/Ports/sparc/faq.html#fox">
     http://www.netbsd.org/Ports/sparc/faq.html#fox
</ulink>
</para>

<para>
See the <productname>JavaStation/Fox</productname> at:
<ulink 
url="http://dubinski-family.org/~jshowto/Files/photos/fox_face.jpg">
     http://dubinski-family.org/~jshowto/Files/photos/fox_face.jpg
</ulink>
</para>

</sect3>


</sect2>


<sect2 id="WhyLinuxSection">
<title>Reasons for Running <application>Linux</application> and <acronym>NC
</acronym> Myths Dispelled</title>

<para>
It turns out that <application>Linux</application> makes the 
<productname>JavaStations</productname> perform more than adequately
on the desktop.  Thanks to the dedicated work of the Linux 
developer community, the <productname>JavaStations</productname>
offer users the low-cost, zero-admin, versatile desktop 
<acronym>NC</acronym>'s they were originally billed to be, but with 
the added freedom granted by the <application>Linux OS</application>.
</para>
 
<para>
While low-cost <acronym>PC</acronym>'s now eclipse the <productname>JavaStation
</productname> in terms of default CPU speed and RAM size, the 
<productname>JavaStations</productname> running <application>Linux</application> are still well-suited for a number of tasks:
</para>

<itemizedlist>
<listitem>
<para>
Diskless X-Terminal.  (Gives the <productname>JavaStations</productname> the 
capability of the <productname>Sun Xterminal 1</productname> hardware that 
they replaced).
</para>
</listitem>
<listitem>
<para>
The <acronym>NC</acronym> solution, Linux-style: local X + a java-capable 
browser can make the <productname>JavaStations</productname>
perform like they did with <application>JavaOS</application>/<application>
HotJava</application>, only <emphasis>many</emphasis> times faster.
</para>
</listitem>

<listitem>
<para>
A beowulf node, or a dedicated <application>RC5</application>/<application>
SETI@HOME</application> client. The <productname>JavaStation</productname> 
running <application>Linux</application> makes a stable, long-lasting 
number cruncher.
</para>
</listitem>

<listitem>
<para>
A small, standalone machine.  While a task more suited on today's 
low-cost machines, there's not much that prevents the <productname>
JavaStation</productname> from performing as a full-fleged 
standalone <application>UNIX</application> machine by itself.  
Just remember to set your expectations appropriately when doing so;
they were <quote>low-budget</quote> clients when they were sold, and
should not be directly compared to today's workstation offerings.
</para>
</listitem>

<listitem>
<para>
A small router and server, particularly with the <productname>Espresso
</productname> model decked out with added IDE disks and NIC.
</para>
</listitem>
</itemizedlist>

<para>
In all of the above scenarios, there is little to no maintenance of
the machine once configured properly.  Such is the advantage of the
<acronym>NC</acronym> hardware.  
</para>
 
<para>
<productname>JavaStations</productname> run so much better with 
<application>Linux</application> than <application>JavaOS</application>, 
one would think that even Sun should have offered it as an option.   
Unfortunately, Sun had killed the line in favor of the <productname>Sun Ray
</productname>.  While the performance of the <productname>Sun Ray
</productname> is good, keep in mind it is not intended as a dedicated 
computing device, and due to its firmware is little more than a graphics 
display hanging off your Sun server, which can give you some unexpected 
bonus features (translation: <quote>brand-name product lock</quote>).  
The performance on 
the <productname>JavaStations</productname> with <application>Linux
</application> will be similar to what you can get with a <productname>Sun 
Ray</productname>, but if ever you want to do something different with 
your machines, you have the flexibility to do so with the 
<productname>JavaStations</productname>.  There was rumor of work to try 
and override the default behavior of the SunRay firmware, and make
it into an adjustable computing device, but until that happens, running 
another OS on a SunRay is just a pipe-dream.
</para>
 
<para>
Lastly, if you're thinking of switching to <hardware>diskless Xterminals
</hardware> on your network, you might consider the <productname>JavaStations 
</productname> over stripped down <acronym>PC</acronym>'s.  The hardware 
is standardized, smaller, and you do not need to worry about burning boot 
<acronym>PROM</acronym>s and the like.
</para>

</sect2>

<sect2 id="JavaStationDeathSection">
<title>Why <productname>JavaStations</productname> are No Longer 
Produced</title>

<para>
Sun's official stance is that the <productname>JavaStation</productname> 
line was terminated in favor of the new <productname>Sun Ray</productname> 
line.  A trip to the former <productname>JavaStation</productname> 
section of Sun's website at <ulink url="http://www.sun.com/javastation">
http://www.sun.com/javastation</ulink> verifies this formal positioning.
(fair use archival copy at: 
<ulink url=
"http://dubinski-family.org/~jshowto/Files/texts/sun_js_site_death.txt">
http://dubinski-family.org/~jshowto/Files/texts/sun_js_site_death.txt
</ulink>
)
</para>

<para>
As the <productname>Sun Ray</productname> is not an <acronym>NC</acronym> 
in the traditional sense (it has a MicroSparc IIep CPU, but the firmware
on the device prevents anyone from grasping it), there is no explanation why 
the two products could not co-exist.
</para>

<para>
In talking to the users of the <productname>JavaStations</productname>
in the pre-Linux era, you will find strong opinions as to why 
the <productname>JavaStations</productname> are no more.  The common 
thread in almost all opinions collected is that the software provided 
by Sun was inadequete for a production environment.  Here are 
collected opinions from users of the Sun-provided software, included 
with their permission:
</para>

<blockquote>
<attribution>Dr. Alex Ryba, Former Professor at Marquette University (Quoted March 2000)
</attribution>
<para>
I only used the Java Stations last summer while teaching 51 and 55/154.  
GoJoe was incredibly slow and I seem to remember having to login to several 
different screens and browsers just to be able to start anything.
</para>
<para>
I had to apologize to my students for the slow and inconvenient 
machines --- I remember making some jokes about technological progress.  
</para>
</blockquote>

<para></para> <!--Be sure there's space -->

<blockquote>
<attribution>Dr. Mark Barnard, Professor at Marquette University (Quoted March 2000)
<email>markb@mscs.mu.edu</email>
</attribution>
<para>
Well, of course the old JavaStations were practically
unusable.  It's not a matter of just my opinion; we used to
have CU 310 full of students using the Xterms all the time.
As soon as the JavaStations appeared there were NO STUDENTS
in there at all.  The JavaStations killed CU 310.  Now that
the JavaStations are (thanks to you) back up to speed,
students are beginning to come back, but they've gotten out
of the habit of working in our lab, and are used to working
on their own in the dorms.  I think this is a big loss --
they don't learn anything from talking to each other in the
labs anymore.
</para>
<para>
Ghostview was slow, etc, but even vi was too slow.  I am
used to typing quickly, and when the cursor can't keep up
with me, I can't handle it.  I would also have worked at home
if I didn't have to be here.  And there were those annoying
red squares left all over the Xterm window when you were in
vi.  I had to type ^L every few lines to get rid of them to
see what I was typing...  The pits.  The whole setup made
me lose a lot of respect for Sun (although I try to separate
the different product lines as much as possible);  I also
think Sun will not get respect for hyping a product like the
JavaStation so strongly, and then just dumping it.  I would
wonder why anyone would not just dump Sun...
</para>

<para>
BTW, the JavaStations, now that they are fast, are quite fine.
I really like mine, and don't see why they aren't a viable
product.
</para>

</blockquote>

<para></para> <!--Be sure there's space -->

<blockquote>
<attribution>Robert Dubinski, former Computer Systems Technician at Marquette 
University (Quoted March 2000)
<email>rsd@dubinski-family.org</email>
</attribution>

<para>
I believe that it was the triple combination of Sun's JavaOS, the 
Hotjava software, and GraphOn's GoJoe X-connectivity software which 
ultimately doomed the JavaStation line. 
</para>
 
<para>
JavaOS was always sluggish in performance for us.  It was rated as
having one of the slowest Java VMs by a ZDNet Online Magazane review at
<ulink url="http://www.zdnet.com/pcmag/features/javaguide/jfgr10.htm">
http://www.zdnet.com/pcmag/features/javaguide/hfgr10.htm</ulink>
.  I speculate this was the the main cause of delaying the 
JavaStation's formal public release to April 1998.   
</para>

<para>
(fair use archive copy of the PC mag review at:
<ulink url=
"http://dubinski-family.org/~jshowto/Files/texts/pcmag_js_jvm_review.txt">
http://dubinski-family.org/~jshowto/Files/texts/pcmag_js_jvm_review.txt
</ulink>
)
</para>

<para>
JavaOS also always lagged behind the current Java developer 
spec (ie running Java 1.0 when Java 1.1 was prevalent, and Java 1.1 
when Java 1.2 was issued).  It was tough explaining to students why
the books they were buying were all using the new event-model of Java 1.1,
but they could not program to it and have it run on <quote>the Java machine
</quote>.  There were also some implementation problems with some of the 
AWT peers which sometimes made programming across platforms difficult.
</para>

<para>
These performance and implementation problems were never addressed in 
subsequent build of JavaOS for the duration we ran it.  I believe the 
last edition we had used a Java 1.1.4 runtime, when we had a Java 1.2
development kit on the server.
</para>

<para>
The HotJava browser software suffered from not being able to handle 
web standards HTML4, cascading style-sheets, or the ECMA javascript.
All of these standards were employed in commercial sites at the time, 
resulting in many sites that weren't viewable by the JavaStations.  
The Hotjava Browser engine also had serious printing problems with 
certain webpages, some of which appeared on Sun's own website!
</para>

<para>
The HotJava Views task selector software also was rough.  Users could have
multiple apps running, but only one displayed at a time.  Manipulation 
of multiple window panes was difficult (no minimization, no quick list to
all apps, resizing not always possible).  Flexibility users had grown
accustomed to was tossed out in favor of this task-selector approach.
On Sun's Java website there was a page boasting of a committee formed
that decided this was the <quote>right way</quote> to make a desktop.
Tell that to our users.
</para>
 
<para>
The GraphOn Go-Joe software was by far the most damaging piece of software
to the JavaStation line.  This was an X-connectivity software Sun licensed
from GraphOn to give users access to the Solaris servers' X apps.  
The connectivity worked via a daemon installed on the Solaris server, 
which was connected to by a Java connectivity applet on the NC side.  This 
small applet (only about 250K) simply threw up the latest display state 
and sent back to the daemon the mouse and keyboard strokes of the user.  
Unlike Xterminals though, the actual Xserver process was spawned and 
communicated with on the remote server-side by the daemon.  Communication 
between the GraphOn client applet and the server daemon was supposedly 
done by a patented protocol to compress communication and speed things up.
However, the performance of X under Go-Joe was terribly sluggish, with 
horrible refresh rates (10-seconds for some page scroll refreshes).  
Many sites operators I spoke to elected to not run the Go-Joe software 
past a trial period for this reason.  We had to run it though, as our 
users were heavily X dependant.  Alternatives like Weird/X were not 
available at this time, and VNC proved not up to snuff given the slow 
JavaOS VM.
</para>

<para>
This performance in Go-Joe alone was enough to give uninformed users the
impression that the JavaStation was an underpowered machine, especially 
when placed side-by-side with the low-cost, end-of-lifed Sun Xterminal 1 
hardware it was meant to replace.  Our students left labs in droves, 
faculty were upset, and giving demos to outsiders was downright 
embarrassing.  In reality the hardware was solid and stable, but 
was hampered by this new, untested OS and new, untested applications 
running on a new, untested hardware architecture.   This triple-threat 
combination, and Sun's timeline for fixing the problems is what 
I feel truly doomed the JavaStation.
</para>
 
<para>
I remember that in 1998, Sun publicized that it had rolled out 3000 
of these machines in-house, including one on Scott McNealy's desk.  
One who has used the JavaStations with the Sun software would have 
to wonder whether he ever turned it on and used it solely for a day?  
Had he done so, I'm sure he'd demand things be done differently.  
(update Oct. 2001:  many ex-Sun employees who've contacted me say they
made great doorstops and paper weights.)
</para>

<para>
Why Sun never ported and released its tried and tested XTerminal 
software to the JavaStation, or even a mini-Solaris, remained a 
mystery to us the whole time before we switched to Linux.  It was
only after we moved to Linux and the JavaStation line was formally killed
by Sun when we learned from some inside Sun sources that Solaris 
actually was ported to Mr. Coffee, but released only internally at Sun.  
As a heavily invested customer site who had begged for help, this was 
not only disheartening, but insulting to discover.
</para>
 
<para>
Lastly, the customer support we received at the time was horrible.  We pled
our case on more than a few occassions, but requests always seemed to
fall on deaf ears.  Calling up SunSolve for JavaStation help always
resulted in a transfer to a Java <emphasis>Language</emphasis> engineer.  
If the Sun employees do not know their own products, that's a problem!
</para>

<para>
>From our view, there no doubt was politics involved in this, and as
customers, we were the ones to bear the results of this.
We continue using Sun equipment when it comes to the proven models 
like the Enterprise-class servers and disk arrays, but on the 
latest low-cost desktop offerings, we will be forever cautious 
given the JavaStation history.
</para>

<para>
Linux now proves the JavaStations are adequate machines, and Sun could 
take this bait and go with it.  If they sell the JavaStations for $250 
a piece and the JavaStation running a proven OS like Linux (or Solaris) 
with proven apps (X), the JavaStation makes for a great network appliance.  
The recent NetPliance I-Opener Linux hack and subsequent controversy 
proves there certainly is a market for this type of low-cost device.
(Oct. 2001 addition: After the publishing of the Linux hack, NetPliance made 
their new hardware unhackable, and subsequently ran out of business.  The
demand for cheap diskless stations still exist.   Today's hackable units
are set-top receivers and failed internet toasters like the 3Com Audrey)
</para>

</blockquote>

<para>
More comments and rebuttal statements by Sun employees are always welcome.
</para>

<para>
(update Oct 2001): A year and a half of this document's existance and not
a single rebuttal statement by Sun.  There were a couple initial requests 
to omit this section, but I refused.  After all, imagine a new reader 
who never saw a JavaStation before: They'd read to this section, think
"Wow, what a great little machine..let me get one!", and then ask
themselves, "If it did all this, why don't they make them anymore?".
The bad must be included with the good, and to leave this section out
is a disservice to all the users who suffered through the poor software
and support during the official lifetime of the JavaStation.  This section,
therefore, is a necessity, and although this document is licensed under the 
GNU Free Documentation License, the eagle-eyed reader will note that this 
section has been labeled as "invariant" to protect it from entities
who may wish to bury it (which is precisely the reason why the Invariant
clause of the GFDL exists).  
</para>

</sect2>

<sect2 id="WherePurchaseSection">
<title>Where to Purchase a JavaStation</title>

<para>
Since Sun has canceled production of the <productname>JavaStation</productname>
line, it no longer sells them through their official channels.  Sun
contacts have informed me that all internal JavaStation stock
was cleaned out and dumped in 2000.  Therefore, All JavaStations are 
now found out in the wild.
</para>
 
<para>
Your best bet to get <productname>JavaStations</productname> though is 
out on the open market.  Educational institutions which received a 
handful from Sun as demo units are now trying to offload them any way 
they can (too bad they don't read this HOWTO).  Search around the 
auction sites like Ebay and Yahoo Auctions, and you should be able 
to turn some up. 
</para>

<para>
A great resource for <productname>JavaStations</productname> used to be
<quote>Bodoman's JavaStation site</quote> at: 
<ulink url="http://www.bodoman.com/javastation/javastation.html">
http://www.bodoman.com/javastation/javastation.html</ulink>.  Sadly,
as of October 2001, the domain bodoman.com seems to no longer resolve.
Ebay may now be your best bet.
</para>
 
<para>
Mr. Coffee is the most widespread JavaStation model, and has tended
to sell around $30-80US consistently for the last year or so.  
</para>

<para>
Krups models more rare and sell at higher prices, probably because the 
stylish case still stands out today.  Prices on Ebay are always over
$100, but for Oct. 2001, their technology is definitely no longer worth 
that much.  A good price would be $80-85US.   Many reports have come from 
the UK telling of many Krups models getting dumped there.  
</para>

<para>
The Dover models were a very hush-hush thing when this HOWTO was initially
published, but the secret is out: if you want one, go to South Africa.  
Dovers seemed to have been dumped there en masse.  Pricing is unknown,
but should be comparable to a Cyrix-266 PC clone.
</para>

<para>
The Espresso and JavaEngine models are near impossible to find,
so if you get one, consider yourself lucky.  If you have a Fox,
well, you're just too cool.  Pricing for these models is likely a
premium. (>$100US).
</para>
 
</sect2>

</sect1>


