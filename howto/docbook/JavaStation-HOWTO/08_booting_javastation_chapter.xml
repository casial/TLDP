<sect1 id="JavaStationBoot-BootYourJavaStationChapter">
<title>Booting Your JavaStation</title>

<para>
Once you've selected or built your boot files to use, and configured your 
boot server to serve them, it is time to boot your JavaStation with Linux!
</para>

<sect2 id="JavaStationBoot-BootVisualsSection">
<title>What to See When Booting Linux</title>

<para>
There are multiple stages to the JavaStation boot cycle.  What
you see on screen can give you clues as to whether things are going
well or not. Therefore, it is vital you become familiar with 
these boot stages, so you can troubleshoot problems rapidly.
</para>

<sect3 id="JavaStationBoot-FreshBoot">
<title>Stage 1: White Screen</title>
<para>
When you first boot, your JavaStation will start up with
a white background screen and black-text PROM banner on top.
You will also see a black "exclamation mark in triangle" warning
logo. This means the system doesn't yet know who it is, and begins
sending RARP/BOOTP requests.
</para>

<para>
If you do not get this white screen, there is something wrong with your
JavaStation. Check all connections, particularly your keyboard, monitor
and mouse cords.  If the JavaStation does not detect a keyboard or mouse,
it thinks it is being booted into a serial console, and will not use the
monitor (or keyboard/mouse).   In exceptional cases, you may need to reset 
a jumper if the unit has been set to always boot into the serial console.
</para>

</sect3>

<sect3 id="JavaStationBoot-CoffeeCupLogo">
<title>Stage 2: Coffee Cup Logo</title>

<para>
When contact is made with the DHCP server, the logo goes away and changes 
to the Java coffee cup logo.  The screen is still white background.  The
logo should be solid, and not blinking.  This step lasts a second or two,
as the unit should already be contacting the TFTP server and downloading the
boot image.
</para>

<para>
If your coffee logo is blinking, it means there is a problem getting your
IP address, usually due to a DHCP leasing problem.  Check your DHCP server's
logs to see that your JavaStation's mac address is being sent a proper
IP address.  
</para>

<para>
If your JavaStation doesn't even get a blinking coffee cup, check both
your DHCP and RARP server settings.  Also, if running the ISC DHCP server,
you may be having a problem with 1514-byte packets and need the patch from 
the ZLS website.
</para>

</sect3>

<sect3 id="JavaStationBoot-Proll">
<title>Stage 3: A Window to PROLL</title>

<para>
After the coffee cup logo is solid a few seconds, a white-text on black 
background window opens.  This is the PROLL window.  It'll show status of 
the TFTP download in progress, and when finished will give stats on the 
size of the file downloaded.   The size should match your completed file.
When finished, the screen should read 'Booting Linux'.  Although, this goes
so fast you may not see it.
</para>

<para>
If you don't see the PROLL window open, confirm your TFTP settings are 
correct.  Also, verify you are pointing to a version of PROLL specific
to your JavaStation model.  In other words, PROLL for Krups is different
from PROLL for Mr. Coffee, and so on.
</para>

<para>
If, at the bottom of the PROLL window, the system prints the phrase
'obio_range' and hangs for minutes without end, the boot is halted,
and you are likely running an old version of PROLL.  Verify your PROLL 
version is the most recent and try again.
</para>

</sect3>

<sect3 id="JavaStationBoot-KernelBoot">
<title>Stage 4: Kernel Boot</title>

<para>
After PROLL finishes its work, the whole screen should go black. 
You should see a picture of the Linux logo, Tux the penguin, in 
the upper left hand of the screen.   At this point, messages
relating your kernel should be spilling down before you.  The
color of the text is either white or grey depending on your
monitor.
</para>

<para>
If the screen didn't flip, and you do not see Tux, chances are
you are using a kernel compiled with framebuffer support for a 
different JavaStation model than you are using.
</para>

<para>
After the message, 'decompressing kernel' appears and the kernel
begins spitting out its boot messages, any mistakes from
this point are due either to: the filesystem you are using, the 
filesystem mounting, or missing kernel drivers which should have 
been compiled in; in other words, your own fault.
</para>

</sect3>

</sect2>

</sect1>

