<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
     "http://docbook.org/xml/4.2/docbookx.dtd" []>

<article id="Reliance-HOWTO">
<articleinfo>
<title>Reliance LG LSP 340 Series WLL Modem Setup HOWTO</title>

<author>
<firstname>Dhiraj</firstname>
<surname>Gaur</surname>
<affiliation>
<address>dhiraj dot gaur _at_ gmail dot com</address> 
<address>dhiraj _at_ mail dot nplindia dot ernet dot in </address>
</affiliation>
</author>

<revhistory id="revhistory">
<revision>
<revnumber>1.0</revnumber>
<date>2005-06-21</date>
<revremark>Revised by Machtelt Garrels for inclusion in TLDP.</revremark>
</revision>
</revhistory>
<abstract>
<para>This document explains how to set up and configure Reliance or TATA
Indicomm WLL phones on Linux, using a serial cable instead of the (default)
USB cable.  It also has instructions on how to build the cable
yourself.</para>
</abstract>
</articleinfo>

<!-- note from tille: table of content will be generated automatically. -->

<sect1 id="sect_01"><title>Introduction</title>

<para>This HOWTO is for people who have Reliance or TATA Indicomm WLL phones and
wish to access Internet on their desktops/laptops running GNU/Linux using
serial cable (NOT a USB CABLE).</para>

<para>No software provided by Reliance was used, but I did search the Internet for
the modem query strings which are required during PPP setup.</para>
<para>I have tried this setup on Slackware Linux 10.1 with a 2.4.29 kernel and I am
pretty confident that this trick will work on other Linux distributions as well. </para>

<para>The HOWTO assumes that you have a fair knowledge about your Linux distribution (BSD or System V style) and that PPP support is pre-compiled in your Linux kernel.</para>

<para>In this HOWTO we are talking about the serial cable for the following reasons:</para>
<orderedlist>
	<listitem><para>The cable provided by Reliance or TATA is very expensive (about 1400 rupees)
		and the software provided supports only MS Windows.The cable
		typically  has a USB interface on one end and an RJ-45 interface on the
		other.   However, for these phones phones a cheaper cable is available
		on the market (only 100 rupees).  This cable has a serial interface on one 
		end and an RJ-45 on the other.  You can make this cable yourself.
		The procedure is discussed later in this HOWTO.  Why waste money when
		you can assemble your own cable or purchase the cheaper one?</para></listitem>
		
		
	<listitem><para>USB cables have some glitches for the WLL handsets, especially
		the LG ones.  I have no idea about other handsets, your input is welcome if you know about other sets.  The 
		advantage in using a USB cable is that you can connect at 153.6 kbps as the handsets have an inbuilt
		modem which is capable for speeds upto 170kbps.
		</para></listitem>

	<listitem><para>On the numerous forums I searched on the net I found that all talked
		only about the USB cable and not about the serial one.  I thought it was high
		time to write this HOWTO to help fellow Linux users.  </para></listitem>
</orderedlist>

<note><title>But I have a USB cable!</title> 
<para>If you have the USB cable after all, visit 
<ulink url="http://www.hackgnu.org/ril-howto.html" /> for information about setting up Internet access using LG/SAMSUNG CDMA sets.</para>
<para>
This link is also helpful:
<ulink url="http://www.linuxsolved.com/forums/ftopic1178.html" />
</para>
<para>Unfortunately the LG/SAMSUNG CDMA mobile uses USB cables only, but the good news is
that these USB cables are also available on the market.  Purchase them at your local computer vendor's.  As per my last
information such cables cost only 200 rupees.
</para>

</note>

</sect1>

<sect1 id="sect_02"><title>System Requirements</title>

<para>You will need a GNU/Linux system with a kernel having PPP support pre-compiled.
I have tested that both the 2.4.29 kernel and the 2.6.x series kernel work fine.  Performance seems to be better using a 2.6.x kernel.
If you see that some kernel modules are missing then configure and recompile
the kernel with PPP support.</para>

<para>Check with <xref linkend="sect_04" /> for the configuration of
PPP.</para>
<para>A connecting serial cable which has on one end an RJ-45 connector which plugs into
the phone and on the other end has an RS-232 serial connector which is plugged into the serial port of the PC.</para>

<para>I built my cable myself.  I used a CAT 5 cable which has four pairs of UTP
copper.  CAT 5 cable is the same cable which is used for networking your system
to a LAN.  While you can use any type of cable, CAT 5 will assure a good quality of the signal that is sent over the wire.  A typical configuration looks like this:</para>

<para>RS-232C Serial Female connector, which is plugged into the PC:</para>
<screen>
___________________
\                 /
 \ 5  4  3  2  1 /
  \  9  8  7  6 /
   \___________/

   </screen>

<para>Now let's start with the PIN Configuration</para>
<itemizedlist>

<listitem><para>PIN 1 - White Brown cable</para></listitem>
<listitem><para>PIN 2 - Blue cable</para></listitem>
<listitem><para>PIN 3 - White Green cable</para></listitem>
<listitem><para>PIN 4 - Green cable</para></listitem>
<listitem><para>PIN 5 - White Blue cable</para></listitem>
<listitem><para>PIN 6 - Brown cable</para></listitem>
<listitem><para>PIN 7 - White Orange cable</para></listitem>
<listitem><para>PIN 8 - Orange cable</para></listitem>
<listitem><para>PIN 9 - Leave empty (we are only using 8 pins)</para></listitem>
</itemizedlist>
<note><title>Serial connection details</title>
<para>Three strings would be enough for a serial connection, but it turned out that the signal is better when you use 5.  The other strings are used for extra rigidness and support of the cable.</para> 
</note> 
<para>Now on to the RJ-45 connector, which is plugged into the WLL Phone RJ-45 jack:</para>
<screen>
[8 7 6 5 4 3 2 1]
		----
		 -
</screen>
<itemizedlist>
<listitem><para>1 - White Orange</para></listitem>
<listitem><para>2 - Orange</para></listitem>
<listitem><para>3 - White Green</para></listitem>
<listitem><para>4 - Blue</para></listitem>
<listitem><para>5 - White Blue</para></listitem>
<listitem><para>6 - Green</para></listitem>
<listitem><para>7 - White Brown</para></listitem>
<listitem><para>8 - Brown</para></listitem>
</itemizedlist>

<tip><title>How to hold the connector</title>
<para>If you are confused as to which way to hold the connector, make sure that you
are holding the connector in such a way that its notch pin is facing towards the 
floor and that the open portion (portion from where the wires enter) is facing
away from you.</para>
</tip>

</sect1>

<sect1 id="sect_03"><title>Activating Internet Services on your Handset</title>

<para>To get Internet services activated on your handset you may contact the customer
care center of your service provider.  In the case of the Reliance the service 
is pre-activated.</para>
<para>For establishing the connection on a Reliance, the user name is the phone number without the prefix 0 in the STD code.  For instance, if your STD code is
0124 and telephone number is 3456789 then your user name is 1243456789.  Your password
is the same as your user name.  When using the TATA Indicomm user name and password are
<quote>internet</quote> (without quotes).</para>

</sect1>

<sect1 id="sect_04"><title>Checking for PPP Support</title>

<para>Although PPP support is provided in almost all Linux distributions but it is still
better to check whether it is present on your system.  You can use <command>checkconfig</command> or, better
still, look into the <filename>/usr/sbin</filename> directory and locate PPP binaries with the command</para>

	<cmdsynopsis><command>ls <option>-al</option> <parameter>ppp*</parameter></command></cmdsynopsis>
	
<para>If you get a listing like this:</para>

<screen>
-rwxr-xr-x  1 root root   3438 2005-05-28 14:56 ppp-go*
-rwxr-xr-x  1 root bin    1787 2004-02-26 21:36 ppp-off*
lrwxrwxrwx  1 root root      6 2005-05-28 14:17 ppp-on -> ppp-go*
lrwxrwxrwx  1 root root      7 2005-05-28 14:17 ppp-stop -> ppp-off*
-rwxr-xr-x  1 root bin  346812 2004-02-26 21:36 pppd*
-rwxr-xr-x  1 root bin   37916 2004-02-26 21:36 pppdump*
-rwxr-xr-x  1 root bin   25936 2003-03-02 22:05 pppoe*
-rwxr-xr-x  1 root bin   22308 2003-03-02 22:05 pppoe-relay*
-rwxr-xr-x  1 root bin   35084 2003-03-02 22:05 pppoe-server*
-rwxr-xr-x  1 root bin   12028 2003-03-02 22:05 pppoe-sniff*
-rwxr-xr-x  1 root bin   58527 2004-02-26 21:36 pppsetup*
-rwxr-xr-x  1 root bin    9192 2004-02-26 21:36 pppstats*
</screen>

<para>then PPP support is definitely present.</para>

<para>Similarly, look into <filename>/etc/ppp</filename> directory, which contains the PPP options file
and some other files configuring PPP:
</para>
<screen>
-rw-------   1 root root   78 2004-02-26 21:36 chap-secrets
-rw-------   1 root root 1625 2005-05-28 14:35 connect-errors
-rw-r--r--   1 root root  938 2003-03-02 22:04 firewall-masq
-rw-r--r--   1 root root  836 2003-03-02 22:04 firewall-standalone
-rwxr-xr-x   1 root root 1208 2005-05-28 14:56 ip-down*
-rwxr-xr-x   1 root root 1208 2005-05-28 14:29 ip-down.OLD*
-rwxr-xr-x   1 root root 1945 2005-05-28 14:56 ip-up*
-rwxr-xr-x   1 root root 1945 2005-05-28 14:29 ip-up.OLD*
-rw-------   1 root root  541 2005-05-28 14:58 options
-rw-------   1 root root  656 2005-05-28 14:56 options.demand
-rw-r--r--   1 root root 9975 2005-05-28 11:21 options.old
-rw-------   1 root root  216 2005-05-28 14:56 pap-secrets
drwxr-xr-x   2 root root 4096 2003-03-02 22:05 plugins/
-rw-r--r--   1 root root  104 2003-03-02 22:04 pppoe-server-options
-rw-r--r--   1 root root 4562 2003-03-02 22:04 pppoe.conf
-rw-------   1 root root  129 2005-05-28 15:12 pppscript
-rw-------   1 root root 8941 2005-05-28 14:56 pppsetup.txt
</screen>

<para>For the sake of safety do copy your original options file to a file <filename>options.old</filename> 
so that you can revert back to your original setup should you have troubles.</para>
<para>See <ulink url="http://www.tldp.org/HOWTO/PPP-HOWTO/kernel-configuration.html">the PPP HOWTO Chapter 10</ulink> for more information on PPP support in the Linux kernel.</para>
</sect1>

<sect1 id="sect_05"><title>Configuring your Phone</title>

<para>Currently Reliance comes with one of two brands of handsets: LG and Samsung.  TATA
Indicom also provides two handsets: LG and AXESSTEL.</para>
<para>Plug the cable to the phone and also to the system.</para>
<para>It is important to note that all these phones act as a serial modem so they do
not require a driver or anything.  After you have connected your phone
to the cable, the cable is plugged in either COM1 or COM2 (and not COM3 or
COM4, as these are virtual ports).</para>
<para>Remember:</para>
	<itemizedlist>
	<listitem><para>COM1 in LINUX is <filename>/dev/ttyS0</filename></para></listitem>
	<listitem><para>COM2 is LINUX is <filename>/dev/ttyS1</filename></para></listitem>
	</itemizedlist>
<para>Your phone modem works on either of the two ports, but I suggest that
first try <filename>/dev/ttyS1</filename>, so as not to disturb other peripherics on your system that are also using a serial port, which would then usually be on <filename>/dev/ttyS0</filename>.</para>

<para>First check if your COM port is fine using the command</para>
	<cmdsynopsis><command>setserial <filename>/dev/ttyS1</filename> <option>-a</option></command></cmdsynopsis>
	
<para>If it displays something like this: </para>
<screen>
	dev/ttyS1, Line 1, UART: 16550A, Port: 0x02f8, IRQ: 3
        Baud_base: 115200, close_delay: 50, divisor: 0
        closing_wait: 3000
        Flags: spd_normal skip_test
	</screen>
<para>then your COM port is fine.  If this does not work, it is possible that PPP support is not configured after all.  Return to <xref linkend="sect_04" /> to check.  If you are sure that PPP support is configured on your system, maybe the problem is with the COM port.  You could try the other port in that case.</para>

<para>Now go to the shell and type</para>
	<cmdsynopsis><command>cat <filename>/dev/ttyS1</filename></command></cmdsynopsis>
	
<para>If this prints nothing, your phone is configured.  Type <keycap>CTRL</keycap>+<keycap>C</keycap> to exit.</para>

<para>If your modem is not configured, the <command>cat</command> command would give an error message like this:</para>
<screen>
	cat: /dev/ttyS1: No such device
</screen>

<para>Alternately, in case you use <application>KDE</application>, start the <application>KPPP</application> program:
	go to the desktop and press <keycap>Alt</keycap>+<keycap>F2</keycap> and type <quote>kppp</quote> in the box which appears.  This will
start <application>KPPP</application>.</para>

<para>Testing using <application>KPPP</application>:</para>

	<para>Click on the <guibutton>Configure</guibutton> button.  Go to the <guibutton>Modem</guibutton> tab.
	There add a new modem on <filename>/dev/ttyS1</filename> and click <guibutton>OK</guibutton>.  
	Now select the newly created modem and click the <guibutton>EDIT</guibutton> button.
	In the new box which appears, select <guibutton>Modem</guibutton> and then click <guibutton>Query modem</guibutton>.
	If the modem is properly set then you will get the proper status of the
	modem.  It will first say something like <quote>Finding Modem</quote>, then some more messages.</para>

<warning><title>Lock file</title>
<para>BE SURE TO UNCHECK THE <guibutton>USE LOCK FILE</guibutton> CHECKBOX in the modem properties, else
it may give some random errors.</para></warning>

<para>If all is fine you will be presented with a window with some blank textboxes and you can go ahead.</para>
</sect1>

<sect1 id="sect_06"><title>PPP Configuration</title>

<para>Make an easy link to your modem device:</para>
	<cmdsynopsis><command>ln <option>-s</option> <filename>/dev/ttyS1 /dev/modem</filename></command></cmdsynopsis>
<para>Now change to the <filename>/usr/sbin</filename> directory and look for ppp files. Look for either a
<filename>pppsetup</filename> or a <filename>pppconfig</filename> script.  You may directly start this script to
set up PPP on your system.  On my Slackware system I typed <command>pppsetup</command> and started
the script.  This script asks for various parameters for connecting via the ISP.</para>

<itemizedlist>
<listitem><para>It first asks for the phone number to dial -- enter <quote>atdt#777</quote>, where 777 is replaced by the number that you need to dial.</para></listitem>

<listitem><para>It then asks for the modem -- select <filename>/dev/ttyS1</filename></para></listitem>
<listitem><para>Baud Rate -- select <quote>115200</quote></para></listitem>
<listitem><para>Callback -- Answer <quote>NO</quote></para></listitem>
<listitem><para>Modem INIT String -- <quote>ATZ OK "at+crm=1" OK</quote></para></listitem>
<listitem><para>ISP Domain Name -- Leave blank</para></listitem>
<listitem><para>DNS Server Address -- Enter a valid DNS Server IP, for instance <quote>202.41.97.3</quote> or
<quote>202.41.97.132</quote>, or leave blank</para></listitem>
<listitem><para>Authentication -- <quote>PAP</quote></para></listitem>
<listitem><para>Username</para></listitem>
<listitem><para>Password</para></listitem>
</itemizedlist>

<para>Refer to <xref linkend="sect_03" /> for Username and Password.</para>
<para>Finally it shows you your configuration.</para>

<para>Some more work needs to be done. We need to edit the options file present in
the <filename>/etc/ppp</filename> folder. We need to check if the following entries are present in
the file:</para>
<screen>
lock
defaultroute
noipdefault
modem
/dev/ttyS1
115200
crtscts
noauth
passive
asyncmap 0
</screen>

<note><title>The noauth option</title>
<para>Remember that <option>noauth</option> is by default commented; you need to uncomment it.</para>
</note>
<para>You can use <command>egrep <option>-v</option> <parameter>'#|^ *$'</parameter> <filename>/etc/ppp/options</filename></command> to list only the options present
in this file so as to quickly judge which ones are missing or incorrect.</para>

</sect1>

<sect1 id="sect_07"><title>Let's Get Started</title>


<para>For testing purposes log in as <emphasis>root</emphasis> and open two different shells.</para>

<para>In one shell issue the command</para>
	<cmdsynopsis><command>tail <option>-f</option> <filename>/var/log/messages</filename></command></cmdsynopsis>
	
<para>Start the PPP connection in the other shell using the command</para>
	<cmdsynopsis><command>ppp-on</command></cmdsynopsis>
	
<para>In the first shell you will see various messages indicating that the modem is
initialized and that the connection is being established.  My <filename>/var/log/messages</filename> looks like this:</para>
 
 <screen>
May 29 06:14:06 dhiraj pppd[2341]: pppd 2.4.2 started by root, uid 0
May 29 06:14:07 dhiraj chat[2343]: timeout set to 60 seconds
May 29 06:14:07 dhiraj chat[2343]: abort on (ERROR)
May 29 06:14:07 dhiraj chat[2343]: abort on (BUSY)
May 29 06:14:07 dhiraj chat[2343]: abort on (NO CARRIER)
May 29 06:14:07 dhiraj chat[2343]: abort on (NO DIALTONE)
May 29 06:14:07 dhiraj chat[2343]: send (ATZ^M)
May 29 06:14:07 dhiraj chat[2343]: expect (OK)
May 29 06:14:07 dhiraj chat[2343]: ATZ^M^M
May 29 06:14:07 dhiraj chat[2343]: OK
May 29 06:14:07 dhiraj chat[2343]:  -- got it
May 29 06:14:07 dhiraj chat[2343]: send (at+crm=1^M)
May 29 06:14:07 dhiraj chat[2343]: expect (OK)
May 29 06:14:07 dhiraj chat[2343]: ^M
May 29 06:14:07 dhiraj chat[2343]: at+crm=1^M^M
May 29 06:14:07 dhiraj chat[2343]: OK
May 29 06:14:07 dhiraj chat[2343]:  -- got it
May 29 06:14:07 dhiraj chat[2343]: send (atdt#777^M)
May 29 06:14:07 dhiraj chat[2343]: timeout set to 75 seconds
May 29 06:14:07 dhiraj chat[2343]: expect (CONNECT)
May 29 06:14:07 dhiraj chat[2343]: ^M
May 29 06:14:07 dhiraj chat[2343]: atdt#777^M^M
May 29 06:14:07 dhiraj chat[2343]: CONNECT
May 29 06:14:07 dhiraj chat[2343]:  -- got it
May 29 06:14:07 dhiraj pppd[2341]: Serial connection established.
May 29 06:14:07 dhiraj pppd[2341]: Using interface ppp0
May 29 06:14:07 dhiraj pppd[2341]: Connect: ppp0 &lt;--&gt; /dev/ttyS1
May 29 06:14:13 dhiraj pppd[2341]: PAP authentication succeeded
May 29 06:14:13 dhiraj kernel: PPP BSD Compression module registered
May 29 06:14:13 dhiraj kernel: PPP Deflate Compression module registered
May 29 06:14:14 dhiraj pppd[2341]: local  IP address 220.224.45.140
May 29 06:14:14 dhiraj pppd[2341]: remote IP address 97.235.2.5
</screen>

<para>Now open your browser and get started.</para>
<para>In case the browser gives the error that the server name is not being resolved, open the file <filename>/etc/resolve.conf</filename> and add the entry</para>
<screen>
	namesserver 202.41.97.9
	nameserver 202.41.97.132
	</screen>
<para>These are two valid DNS servers of Ernet India Labs, located in New Delhi.  Your Internet Service Provider probably provides its own name service, use the IP addresses of the servers they recommend.</para>

<para>When you are finished surfing the net you may stop the connection using</para>
	<cmdsynopsis><command>ppp-off</command></cmdsynopsis>
<para>in the second shell.  In the other shell window you will get something like this
:</para>
<screen>
May 29 06:16:15 dhiraj pppd[2341]: Terminating on signal 2.
May 29 06:16:15 dhiraj pppd[2341]: Connection terminated.
May 29 06:16:15 dhiraj pppd[2341]: Connect time 2.2 minutes.
May 29 06:16:15 dhiraj pppd[2341]: Sent 3401 bytes, received 1563 bytes.
May 29 06:16:16 dhiraj pppd[2341]: Connect time 2.2 minutes.
May 29 06:16:16 dhiraj pppd[2341]: Sent 3401 bytes, received 1563 bytes.
May 29 06:16:16 dhiraj pppd[2341]: Exit.
 </screen>
 
<para>Stop the messages output using <keycap>Ctrl</keycap>+<keycap>C</keycap>.</para>
</sect1>


<sect1 id="sect_08"><title>References</title>



<para>For info about accessing Internet using LG/SAMSUNG CDMA sets via USB cable  
go to <ulink url="http://www.hackgnu.org/ril-howto.html" />.</para>

<para>This link is also helpful:
<ulink url="http://www.linuxsolved.com/forums/ftopic1178.html" />.</para>

<para>All the information in this HOWTO comes partly from these two links, the <ulink url="http://tldp.org/HOWTO/PPP-HOWTO/index.html">PPP-HOWTO</ulink> 
and partly from my research and development in the Linux world.</para>
</sect1>

<sect1 id="sect_09"><title>Feedback</title>

<para>Mail your suggestions, requests and queries to the author.</para>
</sect1>

<sect1 id="sect_10"><title>Licensing information and liability</title>

<para>This document is copyrighted 2005 by Dhiraj Gaur.  Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.1 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy of the license is available at <ulink url="http://www.gnu.org/copyleft/fdl.html">http://www.gnu.org/copyleft/fdl.html</ulink>.</para>
<para>Linux is a registered trademark of Linus Torvalds.</para>

<para>No liability for the contents of this document can be accepted. Use the concepts, examples and information at your own risk. There may be errors and inaccuracies, that could be damaging to your system. Proceed with caution, and although this is highly unlikely, the author(s) do not take any responsibility.</para> 
  <para>All copyrights are held by their by their respective owners, unless specifically noted otherwise. Use of a term in this document should not be regarded as affecting the validity of any trademark or service mark. Naming of particular products or brands should not be seen as endorsements.</para> 


</sect1>

</article>
