%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (images/hp.eps)
%%CreationDate: (Mon Sep 18 12:30:36 2000)
%%BoundingBox: 0 0 139 51
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 140 52
userdict begin
%%BeginData:
DisplayImage
0 0
140 52
12
140 52
1
0
0
256
000000
800000
008000
808000
000080
800080
008080
808080
c0dcc0
a6caf0
2a3faa
2a3fff
2a5f00
2a5f55
2a5faa
2a5fff
2a7f00
2a7f55
2a7faa
2a7fff
2a9f00
2a9f55
2a9faa
2a9fff
2abf00
2abf55
2abfaa
2abfff
2adf00
2adf55
2adfaa
2adfff
2aff00
2aff55
2affaa
2affff
550000
550055
5500aa
5500ff
551f00
551f55
551faa
551fff
553f00
553f55
553faa
553fff
555f00
555f55
555faa
555fff
557f00
557f55
557faa
557fff
559f00
559f55
559faa
559fff
55bf00
55bf55
55bfaa
55bfff
55df00
55df55
55dfaa
55dfff
55ff00
55ff55
55ffaa
55ffff
7f0000
7f0055
7f00aa
7f00ff
7f1f00
7f1f55
7f1faa
7f1fff
7f3f00
7f3f55
7f3faa
7f3fff
7f5f00
7f5f55
7f5faa
7f5fff
7f7f00
7f7f55
7f7faa
7f7fff
7f9f00
7f9f55
7f9faa
7f9fff
7fbf00
7fbf55
7fbfaa
7fbfff
7fdf00
7fdf55
7fdfaa
7fdfff
7fff00
7fff55
7fffaa
7fffff
aa0000
aa0055
aa00aa
aa00ff
aa1f00
aa1f55
aa1faa
aa1fff
aa3f00
aa3f55
aa3faa
aa3fff
aa5f00
aa5f55
aa5faa
aa5fff
aa7f00
aa7f55
aa7faa
aa7fff
aa9f00
aa9f55
aa9faa
aa9fff
aabf00
aabf55
aabfaa
aabfff
aadf00
aadf55
aadfaa
aadfff
aaff00
aaff55
aaffaa
aaffff
d40000
d40055
d400aa
d400ff
d41f00
d41f55
d41faa
d41fff
d43f00
d43f55
d43faa
d43fff
d45f00
d45f55
d45faa
d45fff
d47f00
d47f55
d47faa
d47fff
d49f00
d49f55
d49faa
d49fff
d4bf00
d4bf55
d4bfaa
d4bfff
d4df00
d4df55
d4dfaa
d4dfff
d4ff00
d4ff55
d4ffaa
d4ffff
ff0055
ff00aa
ff1f00
ff1f55
ff1faa
ff1fff
ff3f00
ff3f55
ff3faa
ff3fff
ff5f00
ff5f55
ff5faa
ff5fff
ff7f00
ff7f55
ff7faa
ff7fff
ff9f00
ff9f55
ff9faa
ff9fff
ffbf00
ffbf55
ffbfaa
ffbfff
ffdf00
ffdf55
ffdfaa
ffdfff
ffff55
ffffaa
ccccff
ffccff
33ffff
66ffff
99ffff
ccffff
007f00
007f55
007faa
007fff
009f00
009f55
009faa
009fff
00bf00
00bf55
00bfaa
00bfff
00df00
00df55
00dfaa
00dfff
00ff55
00ffaa
2a0000
2a0055
2a00aa
2a00ff
2a1f00
2a1f55
2a1faa
2a1fff
2a3f00
2a3f55
fffbf0
a0a0a4
808080
ff0000
00ff00
ffff00
0000ff
ff00ff
00ffff
ffffff
ffffffffffffff73820032000a0f3200ff0032000a018200ff0032000a138201ff5a8200
0a11ff010a028200ff0032000a150800ff5932000a0f3200ff0182000a013200ff03f600
820032000a113200ff590a0f8200ff0232000a013200ff06f60032010a0e3200ff590a0e
8200ff02af000a02ff09f60032000a0eff590a0d3200ff0382000a013200ff0b32000a0d
ff590a0c3200ff0432000a018200ff0c32000a0cff590a0cff04af000a02ff0e0a0cff59
0a0b8200ff0482000a013200ff05f600ff0782000a0bff590a0bf600ff0432000a05ff02
32000a058200ff00f6000a0bff590a0a3200ff04d4000a0232010a013200ff010a023201
0a02ff00f60082000a0aff590a0932008200ff0482000a013200ff0032000a013200ff00
82000a02ff0082000a02ff0108000a0aff590a093200d400ff0432000a018200ff000a02
8200ff0032000a013200ff0032000a013200ff01f6000a0aff590a093200af00ff03d400
0a02ff0082000a02ff010a028200ff000a028200ff0232000a09ff590a093200af00ff03
32000a013200ff0032000a013200ff0082000a013200ff0082000a010e00ff0332000a09
ff590a093200f600ff02f6000a028200ff000a02ff0132000a013200ff0032000a013200
ff0332000a09ff590a093200f600ff0282000a013200ff0082000a013200ff010a02ff01
0a02ff040a0aff590a093200f600ff0232000a013200ff0032000a013200ff0082000a01
3200ff0032000a013200ff03af000a0aff590a0aaf00ff01f6000a02ff010a02ff013200
0a01ff00f60032000a013200ff0382000a0aff590a0ad400ff0182000a013200ff003200
0a013200ff0082000a0232010a02ff0432000a0aff590a0a3200ff0232018200ff008200
32018200ff0032000a068200ff03d4000a0bff590a0bff0b0a028200ff0832000a0bff59
0a0cff0982000a02ff0882000a0cff590a0c3200ff0832000a013200ff07d4000a0dff59
0a0d3200ff06f6000a028200ff06d4000a0eff590a0e3200ff0582000a02f600ff058200
0a0fff590a108200ff0332000a013200ff04d40032000a10ff5982000a113200ff00f600
0a028200ff01820132000a113200ff5908000a12ff0082000a013200ff010a143201ff5a
860032000a0f3200ff0032000a018200ff0032000a133201f600ffffffffff8b86003100
ff8907000000ffb40000af00ff5e0701ff040000310007008600af00ff0207000000af00
ff0000000700ff03f00000010700ff030000310007008600af00ff03f0000000f000af00
ff5d31000000ff040000f000820000000700ff0300008600ff000000ff0382000000ff00
08002d00ff030000f000f70000000700ff0382000000f7000800ff5d07000000ff040000
f700ff0000000700ff03310000002d00f000ff0382000000f50031000700ff030000f700
f60000000700ff040000f700ff5e07000000ff040000f700ff0000000700ff03af000001
af00ff0382000000ff00f601ff030000f700ff0000000700ff04f0008200ff5e31000000
ff0400000700ff0000000700ff040001ff05f00000013100ff0300000700ff0000000700
ff04f5008600ffffffffff61
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 139 51
%%EOF
