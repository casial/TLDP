Reqirements for a plone based documentation infrastructure for the LDP
(in no particular order, "from the moon" level view).

- Implement the following workflows:
    - Create and submit a new document for publishing
    - Submit a modified document for tech/language reviews
    - Reviewers logon to see the 'needs review' queue and claim
      something on their own to work on.

- Implement the following states and state transitions (David Lawyer's
  list)

> Binary Tags (Every doc has each of these tags with value of true or
> false.): obsolete, needs review, license allows modification
> 
> The possible 15 values of status are mutually exclusive and
> exhaustive: each document has only one status value.  The numbers
> following each entry are the next possible statuses in the workflow.
> "other" (status 14) could follow any other status under unusual
> circumstances.  Also, a doc which has been misclassified may get put
> into the correct status.  This doesn't specify how the next status is
> selected but in many cases it's easy to determine.
> 
>   1. being written (in progress) 3 7 (if quit w/no draft: 6 15)
>   2. being rewritten (old complete version exists) 3 7 
>   3. under review  1 2 4 5 9 10 15
>      a. has reviewer
>      b. needs reviewer
>   4. active-AOK (up-to-date, maintainer OK) 3 5 8 10 11 12 13
>   5. no maintainer needed (technology static) 11 15
> ---------------------------------- 
> AUTHOR WANTED  needs (re)writing (in author-wanted.html)  
>   6. wish-list (maybe prioritized) 1 15
>   7. unfinished draft exists (not in progress) 1 4 12 15
>   8. frozen (license prohibits modification, needs rewrite) 1 2 3 12 15
>   9. rejected (a needed doc that needs rewrite) 2 15
>  10. unmaintained, needs major revision/rewrite) 2 5 15)
> ------------------------------ 
> MAINTAINER WANTED needs some work (in maintainer-wanted.html)
>  11. unmaintained, needs minor revision  (doc allows modification) 4 10
>  12. maintainer wants out (but still being maintained)  2 4 5 8 10 11 13
>  13. maintainer wants co-maintainer 2 4 5 8 10-12
> --------------------------------
>  14. other (each will be annotated to explain the special status) (any)
>  15. discarded (not worthwhile to keep) 

- Should be able to publish our existing document collection via plone.
    - A python script running from within CVS picks up new commits and
      imports them into plone.
    - Publish the imported DocBook/XML and LinuxDoc documents from
      within plone.

- Interested volunteers should be able to create a login and start
  contributing.

- Complement our existing feedback mechanism with an issue tracking
  system.

- Import documentation as-is and be a repository for Linux documents
  from other projects like Gnome, KDE, Debian, Gentoo, Linux man pages
  etc.

- Language translation
    - Translators should be able to logon and start contributing
      translations.
