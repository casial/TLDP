<appendix id="ntfsfsim"><title>NTFS file system interface module</title>

<para>
The NTFS FSIM lets EVMS users create and manage Windows&reg; NT&reg;
file systems from within the EVMS interfaces.  
</para>

<sect1 id="createntfsfsim"><title>Creating NTFS file systems</title>
<para>
NTFS file systems can be created with <command>mkfs</command> on any EVMS
or compatibility volume that is at least 1 MB in size and that does not already
have a file system.
The following options are available for creating
NTFS file systems:</para>

<variablelist>

<varlistentry><term>label</term>
<listitem>
<para>
Specify a volume label for the file system.  The default is none.
</para>
</listitem>
</varlistentry>

<varlistentry><term>cluster-size</term>
<listitem>
<para>Specify the size of clusters in bytes.  Valid cluster size values
are powers of two, with at least 256, and at most 65536 bytes per cluster.
If omitted, mkntfs cluster-size is determined by the volume size.  The
value is determined as follows:
</para>
<programlisting>
Volume size	Default cluster

0-512 MB	512 bytes
512 MB-1 GB	1024 bytes
1 GB-2 GB	2048 bytes
2 GB+		4096 bytes
</programlisting>
</listitem>
</varlistentry>

<varlistentry><term>mft-zone-mult</term>
<listitem>
<para>Set the MFT zone multiplier, which determines the size of the
MFT zone to use on the volume.  The MFT zone is the area at the
beginning of the volume reserved for the master file table (MFT),
which stores the on disk inodes (MFT records).  Note that small files
are stored entirely within the node.  Thus, if you expect to use the
volume for storing large numbers of very small files, it is useful
to set the zone multiplier to a higher value.  Note that the MFT zone
is resized on the fly as required during operation of the NTFS driver,
but choosing a good value will reduce fragmentation.  Valid
values are 12.5 (the default), 25, 37.5, and 50.
</para>
</listitem>
</varlistentry>

<varlistentry><term>compress</term>
<listitem>
<para>Enable compression on the volume.
</para>
</listitem>
</varlistentry>

<varlistentry><term>quick</term>
<listitem>
<para>Perform quick format.  This skips both zeroing of the volume
and bad sector checking.
</para>
</listitem>
</varlistentry>
</variablelist>

</sect1>

<sect1 id="fixntfsfsim"><title>Fixing NTFS file systems</title>
<para>
The NTFS FSIM can run the <command>ntfsfix</command> utility on an
NTFS file system.
</para>
<para>
<command>ntfsfix</command> fixes NTFS partitions altered in any manner
with the Linux NTFS driver.  <command>ntfsfix</command> is not a Linux
version of <command>chkdsk</command>.  <command>ntfsfix</command>  
only tries to leave the NTFS
partition in a not-so-inconsistent state after the NTFS driver has written
to it.
</para>
<para>
Running <command>ntfsfix</command> after mounting an NTFS volume
read-write is recommended for reducing the chance of severe data loss
when Windows NT or Windows 2000 tries to remount the affected volume.
</para>
<para>
In order to use <command>ntfsfix</command>, you must unmount the
NTFS volume.  After running <command>ntfsfix</command>, you can safely
reboot into Windows NT or Windows 2000.  Please note that
<command>ntfsfix</command> is not an <command>fsck</command>-like tool. 
<command>ntfsfix</command> is not guaranteed to fix all the
alterations provoked by the NTFS driver.
</para>
<para>
The following option is available for running <command>ntfsfix</command>
on an NTFS file system:
</para>

<variablelist>

<varlistentry><term>force</term>
<listitem>
<para>
Force <command>ntfsfix</command> to write changes even if it
detects that the file system is dirty.  The default is false.
</para>
</listitem>
</varlistentry>

</variablelist>

</sect1>

<sect1 id="clonentfsfsim"><title>Cloning NTFS file systems</title>
<para>
The NTFS FSIM can run the <command>ntfsclone</command> utility to
copy an NTFS file system from one volume to another.
<command>ntfsclone</command> is faster than <command>dd</command>
because it only copies the files and the file system data instead
of the entire contents of the volume.
</para>
<para>
The following options are available for running <command>ntfsclone</command>
on an NTFS file system:
</para>

<variablelist>

<varlistentry><term>target</term>
<listitem>
<para>The volume onto which the file system should be cloned.
</para>
</listitem>
</varlistentry>

<varlistentry><term>force</term>
<listitem>
<para>
Force <command>ntfsclone</command> to copy the file system
even if it detects that the volume is dirty.  The default is false.
</para>
</listitem>
</varlistentry>
</variablelist>

</sect1>

<sect1 id="removentfsfsim"><title>Removing NTFS file systems</title>
<para>
An NTFS file system can be removed from its volume if the file system
is unmounted.
This operation involves erasing the superblock from the volume so
the file system will not be recognized in the future.
There are no options available for removing file systems.
</para>
</sect1>

<sect1 id="expandshrinkntfsfsim"><title>Expanding and shrinking NTFS
file systems</title>

<para>
An NTFS file system is automatically expanded or shrunk when its volume
is expanded for shrunk.  However, NTFS only allows these operations if the
volume is unmounted.
</para>

</sect1>

</appendix>

