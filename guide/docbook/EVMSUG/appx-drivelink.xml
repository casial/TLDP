<appendix id="appxdrivelink"><title>The drive link plug-in</title>

<para>The EVMS drive link plug-in is an aggregating plug-in that 
combines storage objects into a single object.
The resulting drive link storage object can be made into a 
compatibility volume, EVMS volume, or even be consumed by
higher-level storage objects.
The drive link plug-in is one way to create large storage objects and
volumes from smaller individual pieces.
</para>

<sect1 id="how"><title>How drive linking is implemented</title>
<para>The drive link plug-in consumes storage objects, called link
objects, producing a larger drive link object whose address space spans
the link objects.
The drive link plug-in knows how to assemble the link objects so as to 
create the exact same address space every time.
The information required to do this is kept on each link child as persistent
drive-link metadata.
During discovery, the drive link plug-in inspects each known storage
object for this metadata.
The presence of this metadata identifies the storage object as a link object.
The information contained in the metadata is sufficient to:</para>
<itemizedlist>
<listitem>
<para>Identify the link object itself.</para>
</listitem>
<listitem>
<para>Identify the drive link storage object that the link object belongs to.
</para>
</listitem>
<listitem>
<para>Identify all link objects belonging to the drive link storage.
object</para>
</listitem>
<listitem>
<para>Establish the order in which to combine the child link objects.</para>
</listitem>
</itemizedlist>


<para>If any link objects are missing at the conclusion of the discovery
process, the drive link storage object contains gaps where the missing
link objects occur.
In such cases, the drive link plug-in attempts to fill in the gap with a
substitute link object and construct the drive link storage object in
read-only mode, which allows for recovery action.
The missing object might reside on removable storage that has been removed or
perhaps a lower layer plug-in failed to produce the missing object.
Whatever the reason, a read-only drive link storage object, together
logging errors, help you take the appropriate actions to recover the drive link.
</para>

</sect1>

<sect1 id="createlink"><title>Creating a drive link</title>
<para>
The drive link plug-in provides a list of acceptable objects from which it can create a drive link object.
When you create an EVMS storage object and choose
the drive link plug-in, a list of acceptable objects is provided that you
simply choose from.
The ordering of the drive link is implied by the order in which you pick objects from the 
provided list.
After you provide a name for the drive link, the identified link
objects are consumed and the new drive link object is produced.
There are no create options.
</para>
</sect1>

<sect1 id="dlexpandpart"><title>Expanding partitions</title>
<para>
Drive links are aggregating objects that can be expanded in the following ways:</para>

<itemizedlist>
<listitem>
<para>
By adding an additional storage object to the end of the drive link.
</para>
</listitem>
<listitem>
<para>
By expanding the last storage object in the drive link.
</para>
</listitem>
</itemizedlist>

<para>
If the expansion point is the drive link storage object, you can perform the
expansion by choosing from a list of objects that the drive link plug-in
finds acceptable for the expansion.
Multiple objects can be selected and added to the drive link.
</para>

<para>
If the expansion point is a link object, then the
plug-in that produced the link object does the expansion.
For example, if the link object was a segment, then the segment manager
plug-in that produced the storage object expands the link object.
Afterward, the drive link storage object is resized to reflect the expansion.
</para>
<para>
There are no expand options.
</para>

</sect1>

<sect1 id="dlshrink"><title>Shrinking a drive link</title>
<para>
Drive links can be shrunk in the following ways:
<itemizedlist>
<listitem><para>By removing link objects from the end of the drive link.</para>
</listitem>
<listitem><para>By shrinking the last storage object in the drive link.</para>
</listitem>
</itemizedlist>
</para>
<para>Removing
a link object from anywhere other than the end of the drive link produces a gap in the drive link address
space, similar to the gap produced by missing link objects.
The drive link plug-in attempts to orchestrate the shrinking of a 
drive-link storage object by only listing the last link object.
If you select this object, the drive link plug-in then lists the next-to-last link object, and so forth, moving backward through the link
objects to satisfy the shrink command.
</para>
<para>
There are no shrink options.
</para>
</sect1>

<sect1 id="dldelete"><title>Deleting a drive link</title>
<para>
A drive link can be deleted as long as it is not currently a
compatibility volume, an EVMS volume, or consumed by another EVMS plug-in.
</para>
<para>
No options are available for deleting a drive link storage object.
</para>
</sect1>

</appendix>

