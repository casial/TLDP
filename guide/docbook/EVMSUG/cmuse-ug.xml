<chapter id="evmscmuse"><title>Using the EVMS interfaces</title>
<para>This chapter explains how to use the EVMS GUI, Ncurses, and CLI interfaces.
This chapter also
includes information about basic navigation and commands available through
the CLI. </para>
<sect1 id="GUI"><title>EVMS GUI</title>
	
	<para>The EVMS GUI is a flexible and easy-to-use
	interface for administering volumes and storage objects. 
	Many users find the EVMS GUI easy to use because it displays which
	storage objects, actions, and plug-ins are acceptable for a
	particular task.</para>
		
	<sect2 id="GUITASKS"><title>Using context sensitive and action menus</title>
		<para>The EVMS GUI lets you accomplish most
		tasks in one of two ways: context sensitive menus or the
		<guimenu>Actions</guimenu> menu.</para>

		<para>Context sensitive menus are available from any
		of the main "views." Each view corresponds to a
		page in a notebook widget located on the EVMS
		GUI main window. These views are made up of different
		trees or lists that visually represent the organization of
		different object types, including volumes,
		feature objects, regions, containers, segments, or disks. </para>

		<para>You can view the context
		sensitive menu for an object by right-clicking on that
		object. The actions that are available
		for that object display on
		the screen. The GUI will only present actions that are 
		acceptable for the selected object at that point in the 
		process. These actions are not always a complete set. </para>

		<para>To use the <guimenuitem>Actions</guimenuitem> menu,
		choose <menuchoice>
			<guimenuitem>Action</guimenuitem>
			<guimenuitem>&lt;the action you want
				to accomplish&gt;</guimenuitem>
			<guimenuitem>&lt;options&gt;</guimenuitem></menuchoice>. 
			The <guimenuitem>Actions</guimenuitem> menu 
		provides a more guided path for
		completing a task than do context sensitive menus. The
			<guimenu>Actions</guimenu> option is similar to the 
		wizard or druid approach used by many GUI applications.</para>

			<para>All of the operations you need to
			perform as an administrator are available through
			the <guimenuitem>Actions</guimenuitem> menu.</para>
			</sect2>


			
	<sect2 id="COMMIT"><title>Saving changes</title>
		<para>All of the changes that you make while in the EVMS
		GUI are only in memory until you save the changes.
		In order to make your changes
		permanent, you must save
		all changes before exiting. If you
		forget to save the changes and decide to exit or close the
		EVMS GUI, you are reminded to save any
		pending changes.</para>

		<para>To explicitly save all the changes you
		made, select <menuchoice><guimenu>Action</guimenu>
		<guimenuitem>Save</guimenuitem></menuchoice>, and click
		the <guibutton>Save</guibutton> button.</para>
	</sect2>
      
<sect2 id="refresh"><title>Refreshing changes</title>
<para>The <guibutton>Refresh</guibutton> button updates the view and allows 
you to see changes, like mount points, that might have changed outside of 
the GUI.</para></sect2>

<sect2 id="guiplus"><title>Using the GUI &quot;+&quot;</title>
<para>Along the left hand side of the panel views in the GUI is a &quot;+&quot; that resides
beside each item.  When you click the &quot;+,&quot;  the objects that are included
in the item are displayed.  If any of the objects that display also have a &quot;+&quot; beside them, you can expand them further by clicking on the &quot;+&quot; next to each object name.</para>
</sect2>

<sect2><title>Using the accelerator keys</title>

<para>You can avoid using a mouse for navigating the EVMS GUI by using a series of
key strokes, or &quot;accelerator keys,&quot; instead.  The following sections tell how to use
accelerator keys in the EVMS Main Window, the Selection Window, and the Configuration
Options Window.</para>

<sect3><title>Main Window accelerator keys</title>

<para>In the Main Window view, use the following keys to navigate:

<table><title>Accelerator keys in the Main Window</title>
<tgroup cols="2"><colspec colname="C1" colnum="1"></colspec><colspec colname="C2" colnum="2"></colspec>
<tbody>
<row><entry>Left and right arrow keys</entry>
<entry>Navigate between the notebook tabs of the different views.</entry></row>
<row><entry>Down arrow and <keycap>Spacebar</keycap></entry>
<entry>Bring keyboard focus into the view.</entry></row></tbody></tgroup></table>
</para>

<para>
While in a view, use the following keys to navigate:

<table><title>Accelerator keys in the views</title>
<tgroup cols="2"><colspec colname="C1" colnum="1"></colspec><colspec colname="C2" colnum="2"></colspec>
<tbody>
<row><entry>up and down arrows</entry><entry>Allow movement around the window.</entry></row>
<row><entry>&quot;+&quot;</entry><entry>Opens an object tree.</entry></row>
<row><entry>&quot;-&quot;</entry><entry>Collapses an object tree.</entry></row>
<row><entry><keycap>ENTER</keycap></entry><entry>Brings up the context menu (on a row).</entry></row>
<row><entry>Arrows</entry><entry>Navigate a context menu.</entry></row>
<row><entry><keycap>ENTER</keycap></entry><entry><para>Activates an item.</para></entry></row>
<row><entry><keycap>ESC</keycap></entry><entry>Dismisses the context menu.</entry></row>
<row><entry><keycap>Tab</keycap></entry><entry>Gets you out of the view and moves you back up to the notebook tab.</entry></row>
</tbody></tgroup>
</table>
 
</para>

<para>
To access the action bar menu, press <keycap>Alt</keycap> and 
then the underlined
accelerator key for the menu choice (for example, "A" for the 
<guimenuitem>Actions</guimenuitem>
dropdown menu).
</para>

<para>In a dropdown menu, you can use the up and down arrows
to navigate.  You could also just type the accelerator key for the menu
item, which is the character with the underscore.  For example, to initiate
a command to delete a container, type <keycap>Alt</keycap> + "A" + "D" + "C."</para>

<para>
<keycap>Ctrl-S</keycap> is a shortcut to initiate saving changes.  
<keycap>Ctrl-Q</keycap> is a shortcut to initiate quitting the EVMS GUI.
</para>



</sect3>

<sect3><title>Accelerator keys in the selection window </title>
<para>
A selection window typically contains a selection list, plus four to five
buttons below it.  Use the following keys to navigate in the selection window:

<table><title>Accelerator keys in the selection window</title>
<tgroup cols="2"><colspec colname="C1" colnum="1"></colspec><colspec colname="C2" colnum="2"></colspec>
<tbody>
<row><entry><keycap>Tab</keycap></entry><entry>Navigates (changes keyboard focus) between the list and the buttons.</entry></row>
<row><entry>Up and down arrows</entry><entry>Navigates within the selection list.</entry></row>
<row><entry><keycap>Spacebar</keycap></entry><entry>Selects and deselects items in the selection list.</entry></row>
<row><entry><keycap>Enter</keycap> on the button or type the accelerator character (if one exists)</entry><entry>Activates a button</entry></row>
</tbody></tgroup>
</table>

</para>

</sect3>

<sect3><title>Configuration options window accelerator keys</title>

<para>
Use the following keys to navigate in the configuration options window:

<table><title>Accelerator keys in the configuration options window</title>
<tgroup cols="2"><colspec colname="C1" colnum="1"></colspec><colspec colname="C2" colnum="2"></colspec>
<tbody>
<row><entry><keycap>Tab</keycap></entry><entry>Cycles focus between fields and buttons</entry></row>
<row><entry>Left and right arrows</entry><entry>Navigate the folder tabs if the window has a widget notebook.</entry></row>
<row><entry><keycap>Spacebar</keycap> or the down arrow</entry><entry>Switches focus to a different notebook page.</entry></row>
<row><entry><keycap>Enter</keycap> or type the accelerator character (if one exists)</entry><entry>Activates a button</entry></row>
</tbody></tgroup>
</table>

</para>

<para>For widgets, use the following keys to navigate:

<table><title>Widget navigation keys in the configuration options window </title>
<tgroup cols="2"><colspec colname="C1" colnum="1"></colspec><colspec colname="C2" colnum="2"></colspec>
<tbody>
<row><entry><keycap>Tab</keycap></entry><entry>Cycles forward through a set of widgets</entry></row>
<row><entry><keycap>Shift-Tab</keycap></entry><entry>Cycles backward through a set of widgets.</entry></row>
</tbody></tgroup>
</table>

</para>

<para>
The widget navigation, selection, and activation is the same in all dialog
windows.
</para>
</sect3>

</sect2>

</sect1>



<!-- NCurses -->	
      <sect1 id="NCURSES"><title>EVMS Ncurses interface</title>
	<para>The EVMS Ncurses (<command>evmsn</command>) user interface is a menu-driven
	interface with characteristics similar to those of the EVMS GUI. 
	Like the EVMS GUI,
	<command>evmsn</command> can accommodate new plug-ins and features without requiring any code
	changes.</para>

	<para>The EVMS Ncurses user interface
	allows you to manage volumes on systems that do not have the X
	and GTK+ libraries that are required by the EVMS GUI.</para>

	     <sect2 id="NCURSESOVER"><title>Navigating through EVMS Ncurses</title>
		<para>The EVMS Ncurses user interface initially
	     	displays a list of logical volumes similar to the
	     logical volumes view in the EVMS GUI.  Ncurses also provides
		a menu bar similar to the menu bar in the EVMS GUI.</para> 

		<para>A general guide to navigating through the layout of the
		Ncurses window is listed below:</para>

		<itemizedlist>
			<listitem><para><keycap>Tab</keycap> cycles you through the available 
			views.</para></listitem>
		
			<listitem><para>Status messages and tips are displayed on
			the last line of the screen.</para></listitem> 

			<listitem><para>Typing the accelerator character (the
			letter highlighted in red) for any menu item activates
			that item.  For example, typing <keycap>A</keycap> in any view brings
			down the <guimenuitem>Actions</guimenuitem> menu.</para></listitem>

			<listitem><para>Typing <keycap>A</keycap> + <keycap>Q</keycap> in a view 
			quits the application.</para></listitem> 

			<listitem><para>Typing <keycap>A</keycap> + <keycap>S</keycap> in a view 
			saves changes
			made during an <command>evmsn</command> session.</para></listitem>
					
			<listitem><para>Use the <keycap>up</keycap> and <keycap>down</keycap> 
			arrows to highlight an object in a view.  Pressing
			<keycap>Enter</keycap> while an object in a view is
			highlighted presents a context popup menu.</para></listitem>

			<listitem><para>Dismiss a context popup menu by pressing
			<keycap>Esc</keycap> or by selecting a menu item with the
			<keycap>up</keycap> and <keycap>down</keycap> arrows and pressing 
			<keycap>Enter</keycap> to 
			activate the menu item.</para> </listitem>

		</itemizedlist>

		<para>Dialog windows are similar in design to the EVMS GUI
dialogs, which allow a user to navigate forward and backward through a series
of dialogs using <guibutton>Next</guibutton> and <guibutton>Previous</guibutton>.  A general
guide to dialog windows is listed below:</para>
<itemizedlist>
<listitem><para><keycap>Tab</keycap> cycles you through the available buttons.  Note
that some buttons might not be available until a valid selection is made.</para>
</listitem>
<listitem><para>The <keycap>left</keycap> and <keycap>right</keycap> arrows can also be used
to move to an available button.</para>
</listitem>
<listitem><para>Navigate a selection list with the <keycap>up</keycap> and 
<keycap>down</keycap> arrows.</para>
</listitem>
<listitem><para>Toggle the selection of an item in a list with <keycap>spacebar</keycap>.</para>
</listitem>
<listitem><para>Activate a button that has the current focus with <keycap>Enter</keycap>.  If the button has
an accelerator character (highlighted in red), you can also activate the button
by typing the accelerator character regardless of whether the button has the current
focus.</para>
</listitem>
</itemizedlist>
<para>The EVMS Ncurses user interface, like the EVMS GUI, provides context menus
for actions that are available only to the selected object in a view.  Ncurses also provides
context menus for items that are
available from the <guimenuitem>Actions</guimenuitem> menu.  These context menus present
a list of commands available for a certain object.</para>

	  </sect2>

	<sect2 id="NCURCHANGES"><title>Saving changes</title>

		<para>All changes you make while in the EVMS
		Ncurses are only in memory until you save the changes.
		In order to make the changes permanent, save
		all changes before exiting. If you
		forget to save the changes and decide to exit the EVMS Ncurses
		interface, you will be reminded of the unsaved changes and
		be given the chance to save or discard the changes before exiting.</para>
			
		<para>To explicitly save all changes,  press <keycap>A</keycap> + <keycap>S</keycap> and confirm
		that you want to save changes.</para> 
	 </sect2>

	</sect1>

<!-- CLI Commands -->

     <sect1 id="COMMANDLINE"><title>EVMS Command Line Interpreter</title>
	<para>The EVMS Command Line Interpreter (EVMS CLI) provides a
	command-driven user interface for EVMS. The EVMS CLI 
	helps automate volume management tasks
	and provides an interactive mode in situations where the
	EVMS GUI is not available.</para>

	<para>Because the EVMS CLI is an interpreter, it operates
	differently than command line utilities for the
	operating system. The options you specify 
	on the EVMS CLI command line to invoke the EVMS 
	CLI control how the EVMS CLI operates. For example, the 
	command line options tell the CLI where to go for commands to 
	interpret and how
	often the EVMS CLI must commit changes to disk. 
	When invoked, the EVMS CLI prompts for commands. </para>
	
	<para>The volume management commands the EVMS CLI understands
	are specified in the <filename>/usr/src/evms-2.2.0/engine2/ui/cli/grammar.ps</filename> 
	file that accompanies the EVMS
	package.  These commands are described in detail in the EVMS
	man page, and help on these commands is available from within the EVMS
	CLI. </para>
	
	<sect2 id="CLITASKS"><title>Using the EVMS CLI</title>
	<para>Use the <command>evms</command> command to start
	  the EVMS CLI. If you do not enter an option with
	  <command>evms</command>, the EVMS CLI starts in
	  interactive mode. In interactive mode, the EVMS CLI prompts
	  you for commands. The result of each command is immediately saved
	  to disk. The EVMS CLI exits when you type <userinput>exit</userinput>. 
	You can modify this behavior by using
	  the following options with <command>evms</command>: 

	  <variablelist><varlistentry><term>-b</term>
		<listitem><para>This option indicates that you are running in
		batch mode and anytime there is a prompt for input from the user,
		the default value is accepted automatically.  This is the
		default behavior with the <command>-f</command> option.</para></listitem></varlistentry>
		<varlistentry><term>-c</term>
		<listitem><para>This option commits changes to disk
		only when EVMS CLI exits, not after
		each command.</para></listitem></varlistentry>
		<varlistentry><term>-f <replaceable>filename</replaceable></term>
		<listitem><para>This option tells the EVMS CLI to use
		<replaceable>filename</replaceable> as the source of
		commands. The EVMS CLI exits when it reaches the
		end of
		<replaceable>filename</replaceable>.
		</para></listitem></varlistentry>
		<varlistentry><term>-p</term>
		<listitem><para>This option only parses commands; it does
		not execute them.
		When combined with the <command>-f</command> option, the 
		<command>-p</command> option detects syntax errors in 
		command files. </para></listitem></varlistentry> 
		<varlistentry><term>-h</term>
		<listitem><para>This option displays help information
		for options used with the <command>evms</command>
		command.</para></listitem> </varlistentry>

		<varlistentry><term>-rl</term>
		<listitem><para>This option tells the CLI that all remaining items on the 
		command line are replacement parameters for use with 
		EVMS commands. </para>

		<note><title>NOTE</title>
		<para>Replacement parameters are accessed in EVMS commands using the 
		<option>$(x)</option> notation, where <replaceable>x</replaceable> is the number identifying which 
		replacement parameter to use. Replacement parameters are assigned 
		numbers (starting with 1) as they are encountered on the command line. 
		Substitutions are not made within comments or quoted strings. </para>

		<para>An example would be:</para>
		<programlisting>evms -c -f testcase -rl sda sdb</programlisting>

<para>
		<option>sda</option> is the replacement for <replaceable>parameter1</replaceable> and 
		<option>sdb</option> is the replacement for <replaceable>parameter2</replaceable></para></note>
		</listitem></varlistentry>
		</variablelist></para>

		<note><title>NOTE</title>
		<para>Information on less commonly used options is available 
		in the EVMS man page. </para></note>

		</sect2>
	<sect2 id="NOTECOMMAND"><title>Notes on commands and command files</title>

		<para>The EVMS CLI allows multiple commands to be displayed
		on a command line.  When you specify multiple commands on a
		single command line, separate the commands with
		a colon ( : ).  This is
		important for command files because the EVMS CLI sees
		a command file as a single long command line.  The
		EVMS CLI has no concept of lines in the file and
		ignores spaces. These features allow a command in
		a command file to span several lines and use whatever
		indentation or margins that are convenient. The only
		requirement is that the command separator (the colon) be present
		between commands.</para> 

		<para>The EVMS CLI ignores spaces unless they 
		occur within quote marks. Place in quotation marks a name that contains
		spaces or other non-printable or control characters.  If the name
		contains a quotation mark as part of the name, the
		quotation mark must be "doubled," as shown in the following 
		example:</para>

<programlisting>"This is a name containing ""embedded"" quote marks."</programlisting>

		<para>EVMS CLI keywords are not case sensitive, but EVMS
		names are case sensitive. Sizes can be input in any units with a unit label, such as KB, MB, GB, or TB.</para>

		<para>Finally, C programming language style comments
		are supported by the EVMS CLI.  Comments can begin and
		end anywhere except within a quoted string, as shown in the
		following example:</para> 

<programlisting>/* This is a comment */
Create:Vo/*This is a silly place for a comment, but it is
allowed.*/lume,"lvm/Sample Container/My LVM
Volume",compatibility</programlisting>
		</sect2>


			
	</sect1>




</chapter>

